{"ast":null,"code":"var _jsxFileName = \"S:\\\\GITHUB PROJECTS\\\\EXPENSE-TRACKER\\\\frontend\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { formatCurrency } from '../utils/formatCurrency';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Register ChartJS components\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Dashboard = () => {\n  const [dashboardData, setDashboardData] = useState({\n    totalExpenses: 0,\n    monthlyExpenses: 0,\n    categoryBreakdown: {},\n    recentExpenses: [],\n    monthlyChange: 0,\n    expenseCount: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    currentUser\n  } = useAuth();\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = await currentUser.getIdToken();\n      const response = await axios.get('http://localhost:5000/api/dashboard', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Dashboard response:', response.data);\n      setDashboardData(response.data);\n    } catch (err) {\n      console.error('Error fetching dashboard data:', err);\n      setError('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (currentUser) {\n      fetchDashboardData();\n    }\n  }, [currentUser]);\n  const handleRetry = () => {\n    fetchDashboardData();\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Loading dashboard data...\"));\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDE15 Oops! Something went wrong\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, error), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleRetry,\n      className: \"retry-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"RETRY LOADING\"));\n  }\n\n  // Prepare data for pie chart\n  const pieChartData = {\n    labels: Object.keys(dashboardData.categoryBreakdown),\n    datasets: [{\n      data: Object.values(dashboardData.categoryBreakdown),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Financial Overview\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Total Expenses\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, formatCurrency(dashboardData.totalExpenses, 'INR'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Monthly Expenses\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, formatCurrency(dashboardData.monthlyExpenses, 'INR')), /*#__PURE__*/React.createElement(\"small\", {\n    className: dashboardData.monthlyChange >= 0 ? 'positive' : 'negative',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, dashboardData.monthlyChange >= 0 ? '↑' : '↓', \" \", Math.abs(dashboardData.monthlyChange).toFixed(1), \"% from last month\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Total Transactions\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, dashboardData.expenseCount))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-charts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Expense Categories\"), Object.keys(dashboardData.categoryBreakdown).length > 0 ? /*#__PURE__*/React.createElement(Pie, {\n    data: pieChartData,\n    options: {\n      responsive: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"No expense data available\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recent-expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Recent Expenses\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, dashboardData.recentExpenses.length > 0 ? dashboardData.recentExpenses.map(expense => /*#__PURE__*/React.createElement(\"div\", {\n    key: expense.id,\n    className: \"expense-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, expense.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, new Date(expense.date).toLocaleDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, formatCurrency(expense.amount, 'INR')))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"No recent expenses\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","formatCurrency","useAuth","Chart","ChartJS","ArcElement","Tooltip","Legend","register","Dashboard","dashboardData","setDashboardData","totalExpenses","monthlyExpenses","categoryBreakdown","recentExpenses","monthlyChange","expenseCount","loading","setLoading","error","setError","currentUser","fetchDashboardData","token","getIdToken","response","get","headers","console","log","data","err","handleRetry","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","pieChartData","labels","Object","keys","datasets","values","backgroundColor","Math","abs","toFixed","length","options","responsive","map","expense","key","id","description","Date","date","toLocaleDateString","amount"],"sources":["S:/GITHUB PROJECTS/EXPENSE-TRACKER/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { formatCurrency } from '../utils/formatCurrency';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport '../styles/Dashboard.css';\n\n// Register ChartJS components\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Dashboard = () => {\n  const [dashboardData, setDashboardData] = useState({\n    totalExpenses: 0,\n    monthlyExpenses: 0,\n    categoryBreakdown: {},\n    recentExpenses: [],\n    monthlyChange: 0,\n    expenseCount: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { currentUser } = useAuth();\n\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const token = await currentUser.getIdToken();\n      const response = await axios.get('http://localhost:5000/api/dashboard', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      console.log('Dashboard response:', response.data);\n      setDashboardData(response.data);\n    } catch (err) {\n      console.error('Error fetching dashboard data:', err);\n      setError('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchDashboardData();\n    }\n  }, [currentUser]);\n\n  const handleRetry = () => {\n    fetchDashboardData();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"dashboard-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading dashboard data...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"dashboard-error\">\n        <h3>😕 Oops! Something went wrong</h3>\n        <p>{error}</p>\n        <button onClick={handleRetry} className=\"retry-button\">\n          RETRY LOADING\n        </button>\n      </div>\n    );\n  }\n\n  // Prepare data for pie chart\n  const pieChartData = {\n    labels: Object.keys(dashboardData.categoryBreakdown),\n    datasets: [{\n      data: Object.values(dashboardData.categoryBreakdown),\n      backgroundColor: [\n        '#FF6384',\n        '#36A2EB',\n        '#FFCE56',\n        '#4BC0C0',\n        '#9966FF',\n        '#FF9F40'\n      ]\n    }]\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <h2>Financial Overview</h2>\n      </div>\n\n      <div className=\"dashboard-stats\">\n        <div className=\"stat-card\">\n          <h3>Total Expenses</h3>\n          <p>{formatCurrency(dashboardData.totalExpenses, 'INR')}</p>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Monthly Expenses</h3>\n          <p>{formatCurrency(dashboardData.monthlyExpenses, 'INR')}</p>\n          <small className={dashboardData.monthlyChange >= 0 ? 'positive' : 'negative'}>\n            {dashboardData.monthlyChange >= 0 ? '↑' : '↓'} {Math.abs(dashboardData.monthlyChange).toFixed(1)}% from last month\n          </small>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Total Transactions</h3>\n          <p>{dashboardData.expenseCount}</p>\n        </div>\n      </div>\n\n      <div className=\"dashboard-charts\">\n        <div className=\"chart-container\">\n          <h3>Expense Categories</h3>\n          {Object.keys(dashboardData.categoryBreakdown).length > 0 ? (\n            <Pie data={pieChartData} options={{ responsive: true }} />\n          ) : (\n            <p className=\"no-data\">No expense data available</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"recent-expenses\">\n        <h3>Recent Expenses</h3>\n        <div className=\"expense-list\">\n          {dashboardData.recentExpenses.length > 0 ? (\n            dashboardData.recentExpenses.map((expense) => (\n              <div key={expense.id} className=\"expense-item\">\n                <div className=\"expense-info\">\n                  <h4>{expense.description}</h4>\n                  <p>{new Date(expense.date).toLocaleDateString()}</p>\n                </div>\n                <div className=\"expense-amount\">\n                  {formatCurrency(expense.amount, 'INR')}\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-data\">No recent expenses</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
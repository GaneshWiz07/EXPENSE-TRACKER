{"ast":null,"code":"import axios from 'axios';\nimport { getAuth } from 'firebase/auth';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token\napi.interceptors.request.use(async config => {\n  try {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (user) {\n      const token = await user.getIdToken(true); // Force refresh token\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  } catch (error) {\n    console.error('Error getting auth token:', error);\n    // Don't throw error here, let the request proceed without token\n    // The server will handle unauthorized requests\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // Token expired or invalid\n        console.error('Authentication error:', error.response.data);\n        // Let the component handle the redirect to login\n        break;\n      case 403:\n        console.error('Access forbidden:', error.response.data);\n        break;\n      case 404:\n        console.error('Resource not found:', error.response.data);\n        break;\n      case 500:\n        console.error('Server error:', error.response.data);\n        break;\n      default:\n        console.error('API Error:', error.response.data);\n    }\n  } else if (error.request) {\n    // Request was made but no response received\n    console.error('No response received:', error.request);\n  } else {\n    // Error in request configuration\n    console.error('Request configuration error:', error.message);\n  }\n  return Promise.reject(error);\n});\nconst expenseApi = {\n  // Expense-related endpoints\n  getExpenses: params => api.get('/api/expenses', {\n    params\n  }),\n  createExpense: data => api.post('/api/expenses', data),\n  updateExpense: (id, data) => api.put(`/api/expenses/${id}`, data),\n  deleteExpense: id => api.delete(`/api/expenses/${id}`),\n  getMonthlyReport: params => api.get('/api/expenses/monthly-report', {\n    params\n  }),\n  getDashboardData: () => api.get('/api/expenses/dashboard')\n};\nexport { api, expenseApi };","map":{"version":3,"names":["axios","getAuth","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","auth","user","currentUser","token","getIdToken","Authorization","error","console","Promise","reject","response","status","data","message","expenseApi","getExpenses","params","get","createExpense","post","updateExpense","id","put","deleteExpense","delete","getMonthlyReport","getDashboardData"],"sources":["S:/GITHUB PROJECTS/EXPENSE-TRACKER/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\nimport { getAuth } from 'firebase/auth';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token\napi.interceptors.request.use(\n  async (config) => {\n    try {\n      const auth = getAuth();\n      const user = auth.currentUser;\n      \n      if (user) {\n        const token = await user.getIdToken(true); // Force refresh token\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.error('Error getting auth token:', error);\n      // Don't throw error here, let the request proceed without token\n      // The server will handle unauthorized requests\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      switch (error.response.status) {\n        case 401:\n          // Token expired or invalid\n          console.error('Authentication error:', error.response.data);\n          // Let the component handle the redirect to login\n          break;\n        case 403:\n          console.error('Access forbidden:', error.response.data);\n          break;\n        case 404:\n          console.error('Resource not found:', error.response.data);\n          break;\n        case 500:\n          console.error('Server error:', error.response.data);\n          break;\n        default:\n          console.error('API Error:', error.response.data);\n      }\n    } else if (error.request) {\n      // Request was made but no response received\n      console.error('No response received:', error.request);\n    } else {\n      // Error in request configuration\n      console.error('Request configuration error:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst expenseApi = {\n  // Expense-related endpoints\n  getExpenses: (params) => api.get('/api/expenses', { params }),\n  createExpense: (data) => api.post('/api/expenses', data),\n  updateExpense: (id, data) => api.put(`/api/expenses/${id}`, data),\n  deleteExpense: (id) => api.delete(`/api/expenses/${id}`),\n  getMonthlyReport: (params) => api.get('/api/expenses/monthly-report', { params }),\n  getDashboardData: () => api.get('/api/expenses/dashboard'),\n};\n\nexport { api, expenseApi };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"S:\\\\GITHUB PROJECTS\\\\EXPENSE-TRACKER\\\\frontend\\\\src\\\\components\\\\ExpenseList.js\";\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport { formatCurrency } from '../utils/formatCurrency';\nimport { useAuth } from '../contexts/AuthContext';\nimport { expenseApi } from '../utils/api';\nimport FinancialGuide from './FinancialGuide';\nimport './ExpenseList.css';\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ExpenseList = () => {\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const [expenses, setExpenses] = useState([]);\n  const [monthlyReport, setMonthlyReport] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    category: '',\n    subcategory: '',\n    paymentMethod: '',\n    minAmount: '',\n    maxAmount: ''\n  });\n  const [appliedFilters, setAppliedFilters] = useState({});\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login', {\n        state: {\n          from: '/expenses'\n        }\n      });\n      return;\n    }\n  }, [currentUser, navigate]);\n  const categories = ['Food', 'Transportation', 'Entertainment', 'Utilities', 'Housing', 'Healthcare', 'Education', 'Personal', 'Shopping', 'Miscellaneous'];\n  const paymentMethods = ['Cash', 'Credit Card', 'Debit Card', 'Bank Transfer', 'Other'];\n  const subcategories = {\n    'Food': ['Groceries', 'Restaurants', 'Cafes', 'Takeout'],\n    'Transportation': ['Public Transit', 'Fuel', 'Taxi/Ride-share', 'Maintenance'],\n    'Housing': ['Rent', 'Mortgage', 'Repairs', 'Maintenance'],\n    'Utilities': ['Electricity', 'Water', 'Internet', 'Phone'],\n    'Healthcare': ['Medicines', 'Doctor Visits', 'Insurance', 'Wellness'],\n    'Entertainment': ['Movies', 'Concerts', 'Streaming', 'Hobbies'],\n    'Shopping': ['Clothing', 'Electronics', 'Gifts', 'Personal Care'],\n    'Miscellaneous': ['Unexpected', 'Donations', 'Education', 'Other']\n  };\n  const formatRupee = amount => {\n    return formatCurrency(amount, 'INR');\n  };\n  const fetchExpenses = useCallback(async () => {\n    if (!currentUser) {\n      return;\n    }\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      const response = await expenseApi.getExpenses({\n        ...appliedFilters,\n        page: 1,\n        limit: 100\n      });\n      console.log('Expenses response:', response.data);\n      let expensesData = response.data.data || response.data;\n\n      // Apply client-side filtering for more precise control\n      if (expensesData && expensesData.length > 0) {\n        expensesData = expensesData.filter(expense => {\n          let matchesFilter = true;\n\n          // Category filter\n          if (appliedFilters.category && expense.category !== appliedFilters.category) {\n            matchesFilter = false;\n          }\n\n          // Subcategory filter\n          if (appliedFilters.subcategory && expense.subcategory !== appliedFilters.subcategory) {\n            matchesFilter = false;\n          }\n\n          // Payment method filter\n          if (appliedFilters.paymentMethod && expense.paymentMethod !== appliedFilters.paymentMethod) {\n            matchesFilter = false;\n          }\n\n          // Amount range filter\n          const amount = parseFloat(expense.amount);\n          if (appliedFilters.minAmount && amount < appliedFilters.minAmount) {\n            matchesFilter = false;\n          }\n          if (appliedFilters.maxAmount && amount > appliedFilters.maxAmount) {\n            matchesFilter = false;\n          }\n          return matchesFilter;\n        });\n      }\n      setExpenses(expensesData);\n    } catch (err) {\n      var _err$response;\n      console.error('Fetch expenses error:', err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        navigate('/login', {\n          state: {\n            from: '/expenses'\n          }\n        });\n      } else {\n        setErrorMessage('Failed to fetch expenses. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser, appliedFilters, navigate]);\n  const fetchMonthlyReport = useCallback(async () => {\n    if (!currentUser) return;\n    try {\n      const response = await expenseApi.getMonthlyReport(appliedFilters);\n      setMonthlyReport(response.data);\n    } catch (error) {\n      console.error('Error fetching monthly report:', error);\n    }\n  }, [currentUser, appliedFilters]);\n  useEffect(() => {\n    if (currentUser) {\n      fetchExpenses();\n      fetchMonthlyReport();\n    }\n  }, [currentUser, fetchExpenses, fetchMonthlyReport]);\n  useEffect(() => {\n    if (currentUser) {\n      fetchExpenses();\n    }\n  }, [currentUser, appliedFilters, fetchExpenses]);\n  const pieChartData = useMemo(() => {\n    if (!expenses || expenses.length === 0) {\n      return {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: [],\n          hoverBackgroundColor: []\n        }]\n      };\n    }\n\n    // Calculate category totals\n    const categoryTotals = expenses.reduce((acc, expense) => {\n      acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n      return acc;\n    }, {});\n\n    // Prepare data for pie chart\n    return {\n      labels: Object.keys(categoryTotals),\n      datasets: [{\n        data: Object.values(categoryTotals),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF']\n      }]\n    };\n  }, [expenses]);\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [name]: value\n      };\n\n      // Reset subcategory when category changes\n      if (name === 'category' && value !== prev.category) {\n        newFilters.subcategory = '';\n      }\n      return newFilters;\n    });\n  };\n  const applyFilters = () => {\n    const validFilters = {};\n\n    // Validate and format amount filters\n    if (filters.minAmount) {\n      const minAmount = parseFloat(filters.minAmount);\n      if (!isNaN(minAmount) && minAmount >= 0) {\n        validFilters.minAmount = minAmount;\n      }\n    }\n    if (filters.maxAmount) {\n      const maxAmount = parseFloat(filters.maxAmount);\n      if (!isNaN(maxAmount) && maxAmount >= 0) {\n        validFilters.maxAmount = maxAmount;\n      }\n    }\n\n    // Validate amount range\n    if (validFilters.minAmount && validFilters.maxAmount) {\n      if (validFilters.minAmount > validFilters.maxAmount) {\n        setErrorMessage('Minimum amount cannot be greater than maximum amount');\n        return;\n      }\n    }\n\n    // Add other filters if they have values\n    if (filters.category && filters.category.trim()) {\n      validFilters.category = filters.category.trim();\n    }\n    if (filters.subcategory && filters.subcategory.trim()) {\n      validFilters.subcategory = filters.subcategory.trim();\n    }\n    if (filters.paymentMethod && filters.paymentMethod.trim()) {\n      validFilters.paymentMethod = filters.paymentMethod.trim();\n    }\n    console.log('Applying filters:', validFilters);\n    setErrorMessage('');\n    setAppliedFilters(validFilters);\n  };\n  const resetFilters = () => {\n    setFilters({\n      category: '',\n      subcategory: '',\n      paymentMethod: '',\n      minAmount: '',\n      maxAmount: ''\n    });\n    setAppliedFilters({});\n    setErrorMessage('');\n  };\n  const renderExpenseList = () => {\n    if (loading && !expenses.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 14\n        }\n      }, \"Loading expenses...\");\n    }\n    if (errorMessage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 14\n        }\n      }, errorMessage);\n    }\n    if (!expenses.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-expenses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }, Object.keys(appliedFilters).length > 0 ? \"No expenses match the selected filters.\" : \"No expenses found.\");\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"expense-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }\n    }, successMessage && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"success-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    }, successMessage), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"expense-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    }, \"Subcategory\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, expenses.map(expense => /*#__PURE__*/React.createElement(\"tr\", {\n      key: expense._id || expense.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, expense.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, formatRupee(expense.amount)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, expense.category), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, expense.subcategory || 'N/A'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, expense.paymentMethod), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, new Date(expense.date).toLocaleDateString()), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, expense.tags ? expense.tags.join(', ') : 'N/A'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleDelete(expense._id || expense.id),\n      className: \"delete-btn\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }, \"\\uD83D\\uDDD1\\uFE0F Delete\")))))));\n  };\n  const renderAIFinancialReport = () => {\n    if (!monthlyReport) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-insights-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-insights-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }, \"AI Financial Insights\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-insights-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-insights-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    }, monthlyReport.insights.map((insight, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"ai-tip\",\n      \"data-type\": insight.type,\n      style: {\n        animationDelay: `${index * 0.1}s`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, getInsightIcon(insight.type)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 19\n      }\n    }, insight.title, insight.type === 'achievement' && '🎉', insight.type === 'warning' && '⚠️'), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, insight.description)))))), monthlyReport.summary && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-insights-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }, \"\\uD83D\\uDCCA\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, \"Monthly Summary\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ai-tip-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, monthlyReport.summary)))));\n  };\n  const getInsightIcon = type => {\n    const icons = {\n      saving: '💰',\n      warning: '⚠️',\n      trend: '📈',\n      suggestion: '💡',\n      achievement: '🎯',\n      budget: '📊',\n      spending: '💳',\n      income: '💵',\n      default: '📋'\n    };\n    return icons[type] || icons.default;\n  };\n  const renderFilters = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-filters-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    value: filters.category,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, \"All Categories\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category,\n    value: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, category)))), filters.category && subcategories[filters.category] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }, \"Subcategory\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"subcategory\",\n    value: filters.subcategory,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, \"All Subcategories\"), subcategories[filters.category].map(sub => /*#__PURE__*/React.createElement(\"option\", {\n    key: sub,\n    value: sub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 19\n    }\n  }, sub)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"paymentMethod\",\n    value: filters.paymentMethod,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, \"All Methods\"), paymentMethods.map(method => /*#__PURE__*/React.createElement(\"option\", {\n    key: method,\n    value: method,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }, method)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, \"Min Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"minAmount\",\n    value: filters.minAmount,\n    onChange: handleFilterChange,\n    placeholder: \"Min Amount\",\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, \"Max Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"maxAmount\",\n    value: filters.maxAmount,\n    onChange: handleFilterChange,\n    placeholder: \"Max Amount\",\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"apply-filters-btn\",\n    onClick: applyFilters,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, \"Apply Filters\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"reset-filters-btn\",\n    onClick: resetFilters,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 11\n    }\n  }, \"Reset Filters\"))), errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 24\n    }\n  }, errorMessage));\n  if (!currentUser) {\n    return null;\n  }\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }\n    }, \"Loading your expenses...\"));\n  }\n  const handleDelete = async expenseId => {\n    if (!window.confirm('Are you sure you want to delete this expense?')) {\n      return;\n    }\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      // First update the UI optimistically\n      setExpenses(prevExpenses => prevExpenses.filter(expense => String(expense._id || expense.id) !== String(expenseId)));\n\n      // Then make the API call\n      await expenseApi.deleteExpense(expenseId);\n\n      // Show success message\n      setSuccessMessage('Expense deleted successfully!');\n\n      // Update monthly report after successful deletion\n      await fetchMonthlyReport();\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Delete expense error:', err);\n      // If deletion fails, revert the optimistic update\n      await fetchExpenses();\n      setErrorMessage('Failed to delete expense. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expenses-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCB8 Expense List\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-expense-btn\",\n    onClick: () => navigate('/add-expense'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 9\n    }\n  }, \"\\u2795 Add New Expense\")), renderFilters(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }\n  }, expenses.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }\n  }, \"No expenses found matching the current filters.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-expense-btn\",\n    onClick: () => navigate('/add-expense'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  }, \"\\u2795 Add Expense\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"expense-table-scrollable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 11\n    }\n  }, renderExpenseList())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"monthly-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }\n  }, pieChartData && /*#__PURE__*/React.createElement(Pie, {\n    data: pieChartData,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      layout: {\n        padding: 10\n      },\n      plugins: {\n        title: {\n          display: true,\n          text: 'Expense Distribution',\n          font: {\n            size: 18,\n            weight: 'bold'\n          }\n        },\n        legend: {\n          position: 'bottom',\n          labels: {\n            boxWidth: 20,\n            font: {\n              size: 12\n            }\n          }\n        },\n        tooltip: {\n          backgroundColor: '#333',\n          titleColor: '#fff',\n          bodyColor: '#fff',\n          borderColor: '#666',\n          borderWidth: 1\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }), !pieChartData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 13\n    }\n  }, \"No expense data available for chart\")), !loading && expenses.length > 0 && /*#__PURE__*/React.createElement(FinancialGuide, {\n    expenses: expenses,\n    monthlyReport: monthlyReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ai-financial-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }\n  }, monthlyReport && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 15\n    }\n  }, \"Financial Insights\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 15\n    }\n  }, monthlyReport.healthAssessment), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 15\n    }\n  }, \"Top Categories\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 15\n    }\n  }, monthlyReport.topCategories.map((category, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 19\n    }\n  }, category.name, \": \", formatRupee(category.total), \"(\", category.percentage.toFixed(2), \"%)\"))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 15\n    }\n  }, \"Recommendations\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 15\n    }\n  }, monthlyReport.recommendations.map((rec, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }\n  }, rec))))), renderAIFinancialReport()));\n};\nexport default ExpenseList;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","useNavigate","formatCurrency","useAuth","expenseApi","FinancialGuide","register","ExpenseList","navigate","currentUser","expenses","setExpenses","monthlyReport","setMonthlyReport","errorMessage","setErrorMessage","successMessage","setSuccessMessage","loading","setLoading","filters","setFilters","category","subcategory","paymentMethod","minAmount","maxAmount","appliedFilters","setAppliedFilters","state","from","categories","paymentMethods","subcategories","formatRupee","amount","fetchExpenses","response","getExpenses","page","limit","console","log","data","expensesData","length","filter","expense","matchesFilter","parseFloat","err","_err$response","error","status","fetchMonthlyReport","getMonthlyReport","pieChartData","labels","datasets","backgroundColor","hoverBackgroundColor","categoryTotals","reduce","acc","Object","keys","values","handleFilterChange","e","name","value","target","prev","newFilters","applyFilters","validFilters","isNaN","trim","resetFilters","renderExpenseList","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","_id","id","description","Date","date","toLocaleDateString","tags","join","onClick","handleDelete","disabled","renderAIFinancialReport","insights","insight","index","type","style","animationDelay","getInsightIcon","title","summary","icons","saving","warning","trend","suggestion","achievement","budget","spending","income","default","renderFilters","onChange","sub","method","placeholder","min","expenseId","window","confirm","prevExpenses","String","deleteExpense","setTimeout","options","responsive","maintainAspectRatio","layout","padding","plugins","display","text","font","size","weight","legend","position","boxWidth","tooltip","titleColor","bodyColor","borderColor","borderWidth","healthAssessment","topCategories","total","percentage","toFixed","recommendations","rec"],"sources":["S:/GITHUB PROJECTS/EXPENSE-TRACKER/frontend/src/components/ExpenseList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport { formatCurrency } from '../utils/formatCurrency';\nimport { useAuth } from '../contexts/AuthContext';\nimport { expenseApi } from '../utils/api';\nimport FinancialGuide from './FinancialGuide';\nimport './ExpenseList.css';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst ExpenseList = () => {\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const [expenses, setExpenses] = useState([]);\n  const [monthlyReport, setMonthlyReport] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    category: '',\n    subcategory: '',\n    paymentMethod: '',\n    minAmount: '',\n    maxAmount: ''\n  });\n  const [appliedFilters, setAppliedFilters] = useState({});\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login', { state: { from: '/expenses' } });\n      return;\n    }\n  }, [currentUser, navigate]);\n\n  const categories = [\n    'Food', 'Transportation', 'Entertainment', \n    'Utilities', 'Housing', 'Healthcare', \n    'Education', 'Personal', 'Shopping', \n    'Miscellaneous'\n  ];\n\n  const paymentMethods = [\n    'Cash', 'Credit Card', 'Debit Card', \n    'Bank Transfer', 'Other'\n  ];\n\n  const subcategories = {\n    'Food': ['Groceries', 'Restaurants', 'Cafes', 'Takeout'],\n    'Transportation': ['Public Transit', 'Fuel', 'Taxi/Ride-share', 'Maintenance'],\n    'Housing': ['Rent', 'Mortgage', 'Repairs', 'Maintenance'],\n    'Utilities': ['Electricity', 'Water', 'Internet', 'Phone'],\n    'Healthcare': ['Medicines', 'Doctor Visits', 'Insurance', 'Wellness'],\n    'Entertainment': ['Movies', 'Concerts', 'Streaming', 'Hobbies'],\n    'Shopping': ['Clothing', 'Electronics', 'Gifts', 'Personal Care'],\n    'Miscellaneous': ['Unexpected', 'Donations', 'Education', 'Other']\n  };\n\n  const formatRupee = (amount) => {\n    return formatCurrency(amount, 'INR');\n  };\n\n  const fetchExpenses = useCallback(async () => {\n    if (!currentUser) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      const response = await expenseApi.getExpenses({\n        ...appliedFilters,\n        page: 1,\n        limit: 100\n      });\n\n      console.log('Expenses response:', response.data);\n      let expensesData = response.data.data || response.data;\n\n      // Apply client-side filtering for more precise control\n      if (expensesData && expensesData.length > 0) {\n        expensesData = expensesData.filter(expense => {\n          let matchesFilter = true;\n\n          // Category filter\n          if (appliedFilters.category && expense.category !== appliedFilters.category) {\n            matchesFilter = false;\n          }\n\n          // Subcategory filter\n          if (appliedFilters.subcategory && expense.subcategory !== appliedFilters.subcategory) {\n            matchesFilter = false;\n          }\n\n          // Payment method filter\n          if (appliedFilters.paymentMethod && expense.paymentMethod !== appliedFilters.paymentMethod) {\n            matchesFilter = false;\n          }\n\n          // Amount range filter\n          const amount = parseFloat(expense.amount);\n          if (appliedFilters.minAmount && amount < appliedFilters.minAmount) {\n            matchesFilter = false;\n          }\n          if (appliedFilters.maxAmount && amount > appliedFilters.maxAmount) {\n            matchesFilter = false;\n          }\n\n          return matchesFilter;\n        });\n      }\n\n      setExpenses(expensesData);\n    } catch (err) {\n      console.error('Fetch expenses error:', err);\n      if (err.response?.status === 401) {\n        navigate('/login', { state: { from: '/expenses' } });\n      } else {\n        setErrorMessage('Failed to fetch expenses. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser, appliedFilters, navigate]);\n\n  const fetchMonthlyReport = useCallback(async () => {\n    if (!currentUser) return;\n\n    try {\n      const response = await expenseApi.getMonthlyReport(appliedFilters);\n      setMonthlyReport(response.data);\n    } catch (error) {\n      console.error('Error fetching monthly report:', error);\n    }\n  }, [currentUser, appliedFilters]);\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchExpenses();\n      fetchMonthlyReport();\n    }\n  }, [currentUser, fetchExpenses, fetchMonthlyReport]);\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchExpenses();\n    }\n  }, [currentUser, appliedFilters, fetchExpenses]);\n\n  const pieChartData = useMemo(() => {\n    if (!expenses || expenses.length === 0) {\n      return {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: [],\n          hoverBackgroundColor: []\n        }]\n      };\n    }\n\n    // Calculate category totals\n    const categoryTotals = expenses.reduce((acc, expense) => {\n      acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n      return acc;\n    }, {});\n\n    // Prepare data for pie chart\n    return {\n      labels: Object.keys(categoryTotals),\n      datasets: [{\n        data: Object.values(categoryTotals),\n        backgroundColor: [\n          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', \n          '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\n        ],\n        hoverBackgroundColor: [\n          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', \n          '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\n        ]\n      }]\n    };\n  }, [expenses]);\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [name]: value\n      };\n      \n      // Reset subcategory when category changes\n      if (name === 'category' && value !== prev.category) {\n        newFilters.subcategory = '';\n      }\n      \n      return newFilters;\n    });\n  };\n\n  const applyFilters = () => {\n    const validFilters = {};\n    \n    // Validate and format amount filters\n    if (filters.minAmount) {\n      const minAmount = parseFloat(filters.minAmount);\n      if (!isNaN(minAmount) && minAmount >= 0) {\n        validFilters.minAmount = minAmount;\n      }\n    }\n    \n    if (filters.maxAmount) {\n      const maxAmount = parseFloat(filters.maxAmount);\n      if (!isNaN(maxAmount) && maxAmount >= 0) {\n        validFilters.maxAmount = maxAmount;\n      }\n    }\n    \n    // Validate amount range\n    if (validFilters.minAmount && validFilters.maxAmount) {\n      if (validFilters.minAmount > validFilters.maxAmount) {\n        setErrorMessage('Minimum amount cannot be greater than maximum amount');\n        return;\n      }\n    }\n    \n    // Add other filters if they have values\n    if (filters.category && filters.category.trim()) {\n      validFilters.category = filters.category.trim();\n    }\n    if (filters.subcategory && filters.subcategory.trim()) {\n      validFilters.subcategory = filters.subcategory.trim();\n    }\n    if (filters.paymentMethod && filters.paymentMethod.trim()) {\n      validFilters.paymentMethod = filters.paymentMethod.trim();\n    }\n    \n    console.log('Applying filters:', validFilters);\n    setErrorMessage('');\n    setAppliedFilters(validFilters);\n  };\n\n  const resetFilters = () => {\n    setFilters({\n      category: '',\n      subcategory: '',\n      paymentMethod: '',\n      minAmount: '',\n      maxAmount: ''\n    });\n    setAppliedFilters({});\n    setErrorMessage('');\n  };\n\n  const renderExpenseList = () => {\n    if (loading && !expenses.length) {\n      return <div className=\"loading\">Loading expenses...</div>;\n    }\n\n    if (errorMessage) {\n      return <div className=\"error\">{errorMessage}</div>;\n    }\n\n    if (!expenses.length) {\n      return (\n        <div className=\"no-expenses\">\n          {Object.keys(appliedFilters).length > 0 \n            ? \"No expenses match the selected filters.\"\n            : \"No expenses found.\"}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"expense-list\">\n        {successMessage && (\n          <div className=\"success-message\">{successMessage}</div>\n        )}\n        <table className=\"expense-table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Category</th>\n              <th>Subcategory</th>\n              <th>Payment Method</th>\n              <th>Date</th>\n              <th>Tags</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.map((expense) => (\n              <tr key={expense._id || expense.id}>\n                <td>{expense.description}</td>\n                <td>{formatRupee(expense.amount)}</td>\n                <td>{expense.category}</td>\n                <td>{expense.subcategory || 'N/A'}</td>\n                <td>{expense.paymentMethod}</td>\n                <td>{new Date(expense.date).toLocaleDateString()}</td>\n                <td>{expense.tags ? expense.tags.join(', ') : 'N/A'}</td>\n                <td>\n                  <button \n                    onClick={() => handleDelete(expense._id || expense.id)}\n                    className=\"delete-btn\"\n                    disabled={loading}\n                  >\n                    🗑️ Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const renderAIFinancialReport = () => {\n    if (!monthlyReport) return null;\n\n    return (\n      <div className=\"ai-insights-section\">\n        <div className=\"ai-insights-header\">\n          <h3>AI Financial Insights</h3>\n        </div>\n        \n        <div className=\"ai-insights-card\">\n          <div className=\"ai-insights-content\">\n            {monthlyReport.insights.map((insight, index) => (\n              <div \n                key={index} \n                className=\"ai-tip\"\n                data-type={insight.type}\n                style={{animationDelay: `${index * 0.1}s`}}\n              >\n                <div className=\"ai-tip-icon\">\n                  {getInsightIcon(insight.type)}\n                </div>\n                <div className=\"ai-tip-content\">\n                  <div className=\"ai-tip-title\">\n                    {insight.title}\n                    {insight.type === 'achievement' && '🎉'}\n                    {insight.type === 'warning' && '⚠️'}\n                  </div>\n                  <div className=\"ai-tip-description\">\n                    {insight.description}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {monthlyReport.summary && (\n          <div className=\"ai-insights-card\">\n            <div className=\"ai-tip\">\n              <div className=\"ai-tip-icon\">📊</div>\n              <div className=\"ai-tip-content\">\n                <div className=\"ai-tip-title\">Monthly Summary</div>\n                <div className=\"ai-tip-description\">\n                  {monthlyReport.summary}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getInsightIcon = (type) => {\n    const icons = {\n      saving: '💰',\n      warning: '⚠️',\n      trend: '📈',\n      suggestion: '💡',\n      achievement: '🎯',\n      budget: '📊',\n      spending: '💳',\n      income: '💵',\n      default: '📋'\n    };\n    return icons[type] || icons.default;\n  };\n\n  const renderFilters = () => (\n    <div className=\"expense-filters-container\">\n      <div className=\"filter-container\">\n        <div className=\"filter-inputs\">\n          <div className=\"filter-group\">\n            <label>Category</label>\n            <select\n              name=\"category\" \n              value={filters.category} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Categories</option>\n              {categories.map(category => (\n                <option key={category} value={category}>{category}</option>\n              ))}\n            </select>\n          </div>\n\n          {filters.category && subcategories[filters.category] && (\n            <div className=\"filter-group\">\n              <label>Subcategory</label>\n              <select \n                name=\"subcategory\" \n                value={filters.subcategory} \n                onChange={handleFilterChange}\n              >\n                <option value=\"\">All Subcategories</option>\n                {subcategories[filters.category].map(sub => (\n                  <option key={sub} value={sub}>{sub}</option>\n                ))}\n              </select>\n            </div>\n          )}\n\n          <div className=\"filter-group\">\n            <label>Payment Method</label>\n            <select \n              name=\"paymentMethod\" \n              value={filters.paymentMethod} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Methods</option>\n              {paymentMethods.map(method => (\n                <option key={method} value={method}>{method}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"filter-group\">\n            <label>Min Amount</label>\n            <input\n              type=\"number\"\n              name=\"minAmount\"\n              value={filters.minAmount}\n              onChange={handleFilterChange}\n              placeholder=\"Min Amount\"\n              min=\"0\"\n            />\n          </div>\n\n          <div className=\"filter-group\">\n            <label>Max Amount</label>\n            <input\n              type=\"number\"\n              name=\"maxAmount\"\n              value={filters.maxAmount}\n              onChange={handleFilterChange}\n              placeholder=\"Max Amount\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n\n        <div className=\"filter-actions\">\n          <button \n            className=\"apply-filters-btn\" \n            onClick={applyFilters}\n            disabled={loading}\n          >\n            Apply Filters\n          </button>\n          <button \n            className=\"reset-filters-btn\" \n            onClick={resetFilters}\n            disabled={loading}\n          >\n            Reset Filters\n          </button>\n        </div>\n      </div>\n      {errorMessage && <div className=\"filter-error\">{errorMessage}</div>}\n    </div>\n  );\n\n  if (!currentUser) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading your expenses...</p>\n      </div>\n    );\n  }\n\n  const handleDelete = async (expenseId) => {\n    if (!window.confirm('Are you sure you want to delete this expense?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      \n      // First update the UI optimistically\n      setExpenses(prevExpenses => \n        prevExpenses.filter(expense => \n          String(expense._id || expense.id) !== String(expenseId)\n        )\n      );\n\n      // Then make the API call\n      await expenseApi.deleteExpense(expenseId);\n      \n      // Show success message\n      setSuccessMessage('Expense deleted successfully!');\n      \n      // Update monthly report after successful deletion\n      await fetchMonthlyReport();\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Delete expense error:', err);\n      // If deletion fails, revert the optimistic update\n      await fetchExpenses();\n      setErrorMessage('Failed to delete expense. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"expense-list-container\">\n      <div className=\"expenses-header\">\n        <h2>💸 Expense List</h2>\n        <button \n          className=\"add-expense-btn\" \n          onClick={() => navigate('/add-expense')}\n        >\n          ➕ Add New Expense\n        </button>\n      </div>\n\n      {renderFilters()}\n\n      <div className=\"expense-table-container\">\n        {expenses.length === 0 ? (\n          <div className=\"no-expenses\">\n            <p>No expenses found matching the current filters.</p>\n            <button \n              className=\"add-expense-btn\"\n              onClick={() => navigate('/add-expense')}\n            >\n              ➕ Add Expense\n            </button>\n          </div>\n        ) : (\n          <div className=\"expense-table-scrollable\">\n            {renderExpenseList()}\n          </div>\n        )}\n      </div>\n\n      <div className=\"monthly-report\">\n        {/* Pie Chart */}\n        <div className=\"chart-container\">\n          {pieChartData && (\n            <Pie \n              data={pieChartData} \n              options={{ \n                responsive: true, \n                maintainAspectRatio: false,\n                layout: {\n                  padding: 10\n                },\n                plugins: {\n                  title: {\n                    display: true,\n                    text: 'Expense Distribution',\n                    font: {\n                      size: 18,\n                      weight: 'bold'\n                    }\n                  },\n                  legend: {\n                    position: 'bottom',\n                    labels: {\n                      boxWidth: 20,\n                      font: {\n                        size: 12\n                      }\n                    }\n                  },\n                  tooltip: {\n                    backgroundColor: '#333',\n                    titleColor: '#fff',\n                    bodyColor: '#fff',\n                    borderColor: '#666',\n                    borderWidth: 1\n                  }\n                }\n              }} \n            />\n          )}\n          {!pieChartData && (\n            <div>No expense data available for chart</div>\n          )}\n        </div>\n\n        {/* Financial Guide */}\n        {!loading && expenses.length > 0 && (\n          <FinancialGuide \n            expenses={expenses} \n            monthlyReport={monthlyReport}\n          />\n        )}\n\n        {/* AI Financial Report */}\n        <div className=\"ai-financial-report\">\n          {monthlyReport && (\n            <div>\n              <h3>Financial Insights</h3>\n              <p>{monthlyReport.healthAssessment}</p>\n              \n              <h4>Top Categories</h4>\n              <ul>\n                {monthlyReport.topCategories.map((category, index) => (\n                  <li key={index}>\n                    {category.name}: {formatRupee(category.total)} \n                    ({category.percentage.toFixed(2)}%)\n                  </li>\n                ))}\n              </ul>\n\n              <h4>Recommendations</h4>\n              <ul>\n                {monthlyReport.recommendations.map((rec, index) => (\n                  <li key={index}>{rec}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n\n        {/* AI Financial Tips */}\n        {renderAIFinancialReport()}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACxE,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,mBAAmB;AAE1BT,OAAO,CAACU,QAAQ,CAACT,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAY,CAAC,GAAGN,OAAO,CAAC,CAAC;EACjC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC;IACrC+B,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,WAAW,EAAE;MAChBD,QAAQ,CAAC,QAAQ,EAAE;QAAEqB,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAY;MAAE,CAAC,CAAC;MACpD;IACF;EACF,CAAC,EAAE,CAACrB,WAAW,EAAED,QAAQ,CAAC,CAAC;EAE3B,MAAMuB,UAAU,GAAG,CACjB,MAAM,EAAE,gBAAgB,EAAE,eAAe,EACzC,WAAW,EAAE,SAAS,EAAE,YAAY,EACpC,WAAW,EAAE,UAAU,EAAE,UAAU,EACnC,eAAe,CAChB;EAED,MAAMC,cAAc,GAAG,CACrB,MAAM,EAAE,aAAa,EAAE,YAAY,EACnC,eAAe,EAAE,OAAO,CACzB;EAED,MAAMC,aAAa,GAAG;IACpB,MAAM,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,CAAC;IACxD,gBAAgB,EAAE,CAAC,gBAAgB,EAAE,MAAM,EAAE,iBAAiB,EAAE,aAAa,CAAC;IAC9E,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,CAAC;IACzD,WAAW,EAAE,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;IAC1D,YAAY,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,CAAC;IACrE,eAAe,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC;IAC/D,UAAU,EAAE,CAAC,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,eAAe,CAAC;IACjE,eAAe,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO;EACnE,CAAC;EAED,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC9B,OAAOjC,cAAc,CAACiC,MAAM,EAAE,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,aAAa,GAAG3C,WAAW,CAAC,YAAY;IAC5C,IAAI,CAACgB,WAAW,EAAE;MAChB;IACF;IAEA,IAAI;MACFU,UAAU,CAAC,IAAI,CAAC;MAChBJ,eAAe,CAAC,EAAE,CAAC;MAEnB,MAAMsB,QAAQ,GAAG,MAAMjC,UAAU,CAACkC,WAAW,CAAC;QAC5C,GAAGX,cAAc;QACjBY,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE;MACT,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,QAAQ,CAACM,IAAI,CAAC;MAChD,IAAIC,YAAY,GAAGP,QAAQ,CAACM,IAAI,CAACA,IAAI,IAAIN,QAAQ,CAACM,IAAI;;MAEtD;MACA,IAAIC,YAAY,IAAIA,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3CD,YAAY,GAAGA,YAAY,CAACE,MAAM,CAACC,OAAO,IAAI;UAC5C,IAAIC,aAAa,GAAG,IAAI;;UAExB;UACA,IAAIrB,cAAc,CAACL,QAAQ,IAAIyB,OAAO,CAACzB,QAAQ,KAAKK,cAAc,CAACL,QAAQ,EAAE;YAC3E0B,aAAa,GAAG,KAAK;UACvB;;UAEA;UACA,IAAIrB,cAAc,CAACJ,WAAW,IAAIwB,OAAO,CAACxB,WAAW,KAAKI,cAAc,CAACJ,WAAW,EAAE;YACpFyB,aAAa,GAAG,KAAK;UACvB;;UAEA;UACA,IAAIrB,cAAc,CAACH,aAAa,IAAIuB,OAAO,CAACvB,aAAa,KAAKG,cAAc,CAACH,aAAa,EAAE;YAC1FwB,aAAa,GAAG,KAAK;UACvB;;UAEA;UACA,MAAMb,MAAM,GAAGc,UAAU,CAACF,OAAO,CAACZ,MAAM,CAAC;UACzC,IAAIR,cAAc,CAACF,SAAS,IAAIU,MAAM,GAAGR,cAAc,CAACF,SAAS,EAAE;YACjEuB,aAAa,GAAG,KAAK;UACvB;UACA,IAAIrB,cAAc,CAACD,SAAS,IAAIS,MAAM,GAAGR,cAAc,CAACD,SAAS,EAAE;YACjEsB,aAAa,GAAG,KAAK;UACvB;UAEA,OAAOA,aAAa;QACtB,CAAC,CAAC;MACJ;MAEArC,WAAW,CAACiC,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAA,IAAAC,aAAA;MACZV,OAAO,CAACW,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3C,IAAI,EAAAC,aAAA,GAAAD,GAAG,CAACb,QAAQ,cAAAc,aAAA,uBAAZA,aAAA,CAAcE,MAAM,MAAK,GAAG,EAAE;QAChC7C,QAAQ,CAAC,QAAQ,EAAE;UAAEqB,KAAK,EAAE;YAAEC,IAAI,EAAE;UAAY;QAAE,CAAC,CAAC;MACtD,CAAC,MAAM;QACLf,eAAe,CAAC,mDAAmD,CAAC;MACtE;IACF,CAAC,SAAS;MACRI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACV,WAAW,EAAEkB,cAAc,EAAEnB,QAAQ,CAAC,CAAC;EAE3C,MAAM8C,kBAAkB,GAAG7D,WAAW,CAAC,YAAY;IACjD,IAAI,CAACgB,WAAW,EAAE;IAElB,IAAI;MACF,MAAM4B,QAAQ,GAAG,MAAMjC,UAAU,CAACmD,gBAAgB,CAAC5B,cAAc,CAAC;MAClEd,gBAAgB,CAACwB,QAAQ,CAACM,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC,EAAE,CAAC3C,WAAW,EAAEkB,cAAc,CAAC,CAAC;EAEjCnC,SAAS,CAAC,MAAM;IACd,IAAIiB,WAAW,EAAE;MACf2B,aAAa,CAAC,CAAC;MACfkB,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAAC7C,WAAW,EAAE2B,aAAa,EAAEkB,kBAAkB,CAAC,CAAC;EAEpD9D,SAAS,CAAC,MAAM;IACd,IAAIiB,WAAW,EAAE;MACf2B,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAAC3B,WAAW,EAAEkB,cAAc,EAAES,aAAa,CAAC,CAAC;EAEhD,MAAMoB,YAAY,GAAG9D,OAAO,CAAC,MAAM;IACjC,IAAI,CAACgB,QAAQ,IAAIA,QAAQ,CAACmC,MAAM,KAAK,CAAC,EAAE;MACtC,OAAO;QACLY,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,CAAC;UACTf,IAAI,EAAE,EAAE;UACRgB,eAAe,EAAE,EAAE;UACnBC,oBAAoB,EAAE;QACxB,CAAC;MACH,CAAC;IACH;;IAEA;IACA,MAAMC,cAAc,GAAGnD,QAAQ,CAACoD,MAAM,CAAC,CAACC,GAAG,EAAEhB,OAAO,KAAK;MACvDgB,GAAG,CAAChB,OAAO,CAACzB,QAAQ,CAAC,GAAG,CAACyC,GAAG,CAAChB,OAAO,CAACzB,QAAQ,CAAC,IAAI,CAAC,IAAIyB,OAAO,CAACZ,MAAM;MACrE,OAAO4B,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEN;IACA,OAAO;MACLN,MAAM,EAAEO,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC;MACnCH,QAAQ,EAAE,CAAC;QACTf,IAAI,EAAEqB,MAAM,CAACE,MAAM,CAACL,cAAc,CAAC;QACnCF,eAAe,EAAE,CACf,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAC3C;QACDC,oBAAoB,EAAE,CACpB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;MAE9C,CAAC;IACH,CAAC;EACH,CAAC,EAAE,CAAClD,QAAQ,CAAC,CAAC;EAEd,MAAMyD,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChClD,UAAU,CAACmD,IAAI,IAAI;MACjB,MAAMC,UAAU,GAAG;QACjB,GAAGD,IAAI;QACP,CAACH,IAAI,GAAGC;MACV,CAAC;;MAED;MACA,IAAID,IAAI,KAAK,UAAU,IAAIC,KAAK,KAAKE,IAAI,CAAClD,QAAQ,EAAE;QAClDmD,UAAU,CAAClD,WAAW,GAAG,EAAE;MAC7B;MAEA,OAAOkD,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAG,CAAC,CAAC;;IAEvB;IACA,IAAIvD,OAAO,CAACK,SAAS,EAAE;MACrB,MAAMA,SAAS,GAAGwB,UAAU,CAAC7B,OAAO,CAACK,SAAS,CAAC;MAC/C,IAAI,CAACmD,KAAK,CAACnD,SAAS,CAAC,IAAIA,SAAS,IAAI,CAAC,EAAE;QACvCkD,YAAY,CAAClD,SAAS,GAAGA,SAAS;MACpC;IACF;IAEA,IAAIL,OAAO,CAACM,SAAS,EAAE;MACrB,MAAMA,SAAS,GAAGuB,UAAU,CAAC7B,OAAO,CAACM,SAAS,CAAC;MAC/C,IAAI,CAACkD,KAAK,CAAClD,SAAS,CAAC,IAAIA,SAAS,IAAI,CAAC,EAAE;QACvCiD,YAAY,CAACjD,SAAS,GAAGA,SAAS;MACpC;IACF;;IAEA;IACA,IAAIiD,YAAY,CAAClD,SAAS,IAAIkD,YAAY,CAACjD,SAAS,EAAE;MACpD,IAAIiD,YAAY,CAAClD,SAAS,GAAGkD,YAAY,CAACjD,SAAS,EAAE;QACnDX,eAAe,CAAC,sDAAsD,CAAC;QACvE;MACF;IACF;;IAEA;IACA,IAAIK,OAAO,CAACE,QAAQ,IAAIF,OAAO,CAACE,QAAQ,CAACuD,IAAI,CAAC,CAAC,EAAE;MAC/CF,YAAY,CAACrD,QAAQ,GAAGF,OAAO,CAACE,QAAQ,CAACuD,IAAI,CAAC,CAAC;IACjD;IACA,IAAIzD,OAAO,CAACG,WAAW,IAAIH,OAAO,CAACG,WAAW,CAACsD,IAAI,CAAC,CAAC,EAAE;MACrDF,YAAY,CAACpD,WAAW,GAAGH,OAAO,CAACG,WAAW,CAACsD,IAAI,CAAC,CAAC;IACvD;IACA,IAAIzD,OAAO,CAACI,aAAa,IAAIJ,OAAO,CAACI,aAAa,CAACqD,IAAI,CAAC,CAAC,EAAE;MACzDF,YAAY,CAACnD,aAAa,GAAGJ,OAAO,CAACI,aAAa,CAACqD,IAAI,CAAC,CAAC;IAC3D;IAEApC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEiC,YAAY,CAAC;IAC9C5D,eAAe,CAAC,EAAE,CAAC;IACnBa,iBAAiB,CAAC+C,YAAY,CAAC;EACjC,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBzD,UAAU,CAAC;MACTC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACb,CAAC,CAAC;IACFE,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrBb,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMgE,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI7D,OAAO,IAAI,CAACR,QAAQ,CAACmC,MAAM,EAAE;MAC/B,oBAAOvD,KAAA,CAAA0F,aAAA;QAAKC,SAAS,EAAC,SAAS;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAC,qBAAwB,CAAC;IAC3D;IAEA,IAAIzE,YAAY,EAAE;MAChB,oBAAOxB,KAAA,CAAA0F,aAAA;QAAKC,SAAS,EAAC,OAAO;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAEzE,YAAkB,CAAC;IACpD;IAEA,IAAI,CAACJ,QAAQ,CAACmC,MAAM,EAAE;MACpB,oBACEvD,KAAA,CAAA0F,aAAA;QAAKC,SAAS,EAAC,aAAa;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACzBvB,MAAM,CAACC,IAAI,CAACtC,cAAc,CAAC,CAACkB,MAAM,GAAG,CAAC,GACnC,yCAAyC,GACzC,oBACD,CAAC;IAEV;IAEA,oBACEvD,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,cAAc;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC1BvE,cAAc,iBACb1B,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,iBAAiB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEvE,cAAoB,CACvD,eACD1B,KAAA,CAAA0F,aAAA;MAAOC,SAAS,EAAC,eAAe;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9BjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,aAAe,CAAC,eACpBjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,QAAU,CAAC,eACfjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,UAAY,CAAC,eACjBjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,aAAe,CAAC,eACpBjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,gBAAkB,CAAC,eACvBjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,MAAQ,CAAC,eACbjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,MAAQ,CAAC,eACbjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,SAAW,CACb,CACC,CAAC,eACRjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACG7E,QAAQ,CAAC8E,GAAG,CAAEzC,OAAO,iBACpBzD,KAAA,CAAA0F,aAAA;MAAIS,GAAG,EAAE1C,OAAO,CAAC2C,GAAG,IAAI3C,OAAO,CAAC4C,EAAG;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjCjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKxC,OAAO,CAAC6C,WAAgB,CAAC,eAC9BtG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKrD,WAAW,CAACa,OAAO,CAACZ,MAAM,CAAM,CAAC,eACtC7C,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKxC,OAAO,CAACzB,QAAa,CAAC,eAC3BhC,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKxC,OAAO,CAACxB,WAAW,IAAI,KAAU,CAAC,eACvCjC,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKxC,OAAO,CAACvB,aAAkB,CAAC,eAChClC,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,IAAIM,IAAI,CAAC9C,OAAO,CAAC+C,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAM,CAAC,eACtDzG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKxC,OAAO,CAACiD,IAAI,GAAGjD,OAAO,CAACiD,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAU,CAAC,eACzD3G,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEjG,KAAA,CAAA0F,aAAA;MACEkB,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAACpD,OAAO,CAAC2C,GAAG,IAAI3C,OAAO,CAAC4C,EAAE,CAAE;MACvDV,SAAS,EAAC,YAAY;MACtBmB,QAAQ,EAAElF,OAAQ;MAAAgE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnB,2BAEO,CACN,CACF,CACL,CACI,CACF,CACJ,CAAC;EAEV,CAAC;EAED,MAAMc,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAACzF,aAAa,EAAE,OAAO,IAAI;IAE/B,oBACEtB,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,qBAAqB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClCjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,oBAAoB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjCjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,uBAAyB,CAC1B,CAAC,eAENjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,kBAAkB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC/BjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,qBAAqB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACjC3E,aAAa,CAAC0F,QAAQ,CAACd,GAAG,CAAC,CAACe,OAAO,EAAEC,KAAK,kBACzClH,KAAA,CAAA0F,aAAA;MACES,GAAG,EAAEe,KAAM;MACXvB,SAAS,EAAC,QAAQ;MAClB,aAAWsB,OAAO,CAACE,IAAK;MACxBC,KAAK,EAAE;QAACC,cAAc,EAAE,GAAGH,KAAK,GAAG,GAAG;MAAG,CAAE;MAAAtB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAE3CjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,aAAa;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACzBqB,cAAc,CAACL,OAAO,CAACE,IAAI,CACzB,CAAC,eACNnH,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,gBAAgB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC7BjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,cAAc;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC1BgB,OAAO,CAACM,KAAK,EACbN,OAAO,CAACE,IAAI,KAAK,aAAa,IAAI,IAAI,EACtCF,OAAO,CAACE,IAAI,KAAK,SAAS,IAAI,IAC5B,CAAC,eACNnH,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,oBAAoB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAChCgB,OAAO,CAACX,WACN,CACF,CACF,CACN,CACE,CACF,CAAC,EAELhF,aAAa,CAACkG,OAAO,iBACpBxH,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,kBAAkB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC/BjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrBjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,aAAa;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,cAAO,CAAC,eACrCjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,gBAAgB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC7BjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,cAAc;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,iBAAoB,CAAC,eACnDjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,oBAAoB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAChC3E,aAAa,CAACkG,OACZ,CACF,CACF,CACF,CAEJ,CAAC;EAEV,CAAC;EAED,MAAMF,cAAc,GAAIH,IAAI,IAAK;IAC/B,MAAMM,KAAK,GAAG;MACZC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE;IACX,CAAC;IACD,OAAOT,KAAK,CAACN,IAAI,CAAC,IAAIM,KAAK,CAACS,OAAO;EACrC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,kBACpBnI,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBjG,KAAA,CAAA0F,aAAA;IACEX,IAAI,EAAC,UAAU;IACfC,KAAK,EAAElD,OAAO,CAACE,QAAS;IACxBoG,QAAQ,EAAEvD,kBAAmB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE7BjG,KAAA,CAAA0F,aAAA;IAAQV,KAAK,EAAC,EAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAsB,CAAC,EACvCxD,UAAU,CAACyD,GAAG,CAAClE,QAAQ,iBACtBhC,KAAA,CAAA0F,aAAA;IAAQS,GAAG,EAAEnE,QAAS;IAACgD,KAAK,EAAEhD,QAAS;IAAA4D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEjE,QAAiB,CAC3D,CACK,CACL,CAAC,EAELF,OAAO,CAACE,QAAQ,IAAIW,aAAa,CAACb,OAAO,CAACE,QAAQ,CAAC,iBAClDhC,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,aAAkB,CAAC,eAC1BjG,KAAA,CAAA0F,aAAA;IACEX,IAAI,EAAC,aAAa;IAClBC,KAAK,EAAElD,OAAO,CAACG,WAAY;IAC3BmG,QAAQ,EAAEvD,kBAAmB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE7BjG,KAAA,CAAA0F,aAAA;IAAQV,KAAK,EAAC,EAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAyB,CAAC,EAC1CtD,aAAa,CAACb,OAAO,CAACE,QAAQ,CAAC,CAACkE,GAAG,CAACmC,GAAG,iBACtCrI,KAAA,CAAA0F,aAAA;IAAQS,GAAG,EAAEkC,GAAI;IAACrD,KAAK,EAAEqD,GAAI;IAAAzC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEoC,GAAY,CAC5C,CACK,CACL,CACN,eAEDrI,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,gBAAqB,CAAC,eAC7BjG,KAAA,CAAA0F,aAAA;IACEX,IAAI,EAAC,eAAe;IACpBC,KAAK,EAAElD,OAAO,CAACI,aAAc;IAC7BkG,QAAQ,EAAEvD,kBAAmB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE7BjG,KAAA,CAAA0F,aAAA;IAAQV,KAAK,EAAC,EAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,EACpCvD,cAAc,CAACwD,GAAG,CAACoC,MAAM,iBACxBtI,KAAA,CAAA0F,aAAA;IAAQS,GAAG,EAAEmC,MAAO;IAACtD,KAAK,EAAEsD,MAAO;IAAA1C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEqC,MAAe,CACrD,CACK,CACL,CAAC,eAENtI,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,YAAiB,CAAC,eACzBjG,KAAA,CAAA0F,aAAA;IACEyB,IAAI,EAAC,QAAQ;IACbpC,IAAI,EAAC,WAAW;IAChBC,KAAK,EAAElD,OAAO,CAACK,SAAU;IACzBiG,QAAQ,EAAEvD,kBAAmB;IAC7B0D,WAAW,EAAC,YAAY;IACxBC,GAAG,EAAC,GAAG;IAAA5C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACR,CACE,CAAC,eAENjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,YAAiB,CAAC,eACzBjG,KAAA,CAAA0F,aAAA;IACEyB,IAAI,EAAC,QAAQ;IACbpC,IAAI,EAAC,WAAW;IAChBC,KAAK,EAAElD,OAAO,CAACM,SAAU;IACzBgG,QAAQ,EAAEvD,kBAAmB;IAC7B0D,WAAW,EAAC,YAAY;IACxBC,GAAG,EAAC,GAAG;IAAA5C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACR,CACE,CACF,CAAC,eAENjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BjG,KAAA,CAAA0F,aAAA;IACEC,SAAS,EAAC,mBAAmB;IAC7BiB,OAAO,EAAExB,YAAa;IACtB0B,QAAQ,EAAElF,OAAQ;IAAAgE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnB,eAEO,CAAC,eACTjG,KAAA,CAAA0F,aAAA;IACEC,SAAS,EAAC,mBAAmB;IAC7BiB,OAAO,EAAEpB,YAAa;IACtBsB,QAAQ,EAAElF,OAAQ;IAAAgE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnB,eAEO,CACL,CACF,CAAC,EACLzE,YAAY,iBAAIxB,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEzE,YAAkB,CAC/D,CACN;EAED,IAAI,CAACL,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,IAAIS,OAAO,EAAE;IACX,oBACE5B,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,mBAAmB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAChCjG,KAAA,CAAA0F,aAAA;MAAKC,SAAS,EAAC,iBAAiB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAM,CAAC,eACvCjG,KAAA,CAAA0F,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,0BAA2B,CAC3B,CAAC;EAEV;EAEA,MAAMY,YAAY,GAAG,MAAO4B,SAAS,IAAK;IACxC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MACpE;IACF;IAEA,IAAI;MACF9G,UAAU,CAAC,IAAI,CAAC;MAChBJ,eAAe,CAAC,EAAE,CAAC;;MAEnB;MACAJ,WAAW,CAACuH,YAAY,IACtBA,YAAY,CAACpF,MAAM,CAACC,OAAO,IACzBoF,MAAM,CAACpF,OAAO,CAAC2C,GAAG,IAAI3C,OAAO,CAAC4C,EAAE,CAAC,KAAKwC,MAAM,CAACJ,SAAS,CACxD,CACF,CAAC;;MAED;MACA,MAAM3H,UAAU,CAACgI,aAAa,CAACL,SAAS,CAAC;;MAEzC;MACA9G,iBAAiB,CAAC,+BAA+B,CAAC;;MAElD;MACA,MAAMqC,kBAAkB,CAAC,CAAC;;MAE1B;MACA+E,UAAU,CAAC,MAAM;QACfpH,iBAAiB,CAAC,EAAE,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOiC,GAAG,EAAE;MACZT,OAAO,CAACW,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3C;MACA,MAAMd,aAAa,CAAC,CAAC;MACrBrB,eAAe,CAAC,6CAA6C,CAAC;IAChE,CAAC,SAAS;MACRI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE7B,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,2BAAmB,CAAC,eACxBjG,KAAA,CAAA0F,aAAA;IACEC,SAAS,EAAC,iBAAiB;IAC3BiB,OAAO,EAAEA,CAAA,KAAM1F,QAAQ,CAAC,cAAc,CAAE;IAAA0E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzC,wBAEO,CACL,CAAC,EAELkC,aAAa,CAAC,CAAC,eAEhBnI,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrC7E,QAAQ,CAACmC,MAAM,KAAK,CAAC,gBACpBvD,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iDAAkD,CAAC,eACtDjG,KAAA,CAAA0F,aAAA;IACEC,SAAS,EAAC,iBAAiB;IAC3BiB,OAAO,EAAEA,CAAA,KAAM1F,QAAQ,CAAC,cAAc,CAAE;IAAA0E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzC,oBAEO,CACL,CAAC,gBAENjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,0BAA0B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtCR,iBAAiB,CAAC,CAChB,CAEJ,CAAC,eAENzF,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE7BjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7B/B,YAAY,iBACXlE,KAAA,CAAA0F,aAAA,CAAChF,GAAG;IACF2C,IAAI,EAAEa,YAAa;IACnB8E,OAAO,EAAE;MACPC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACP9B,KAAK,EAAE;UACL+B,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,sBAAsB;UAC5BC,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE;UACV;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,QAAQ,EAAE,QAAQ;UAClBzF,MAAM,EAAE;YACN0F,QAAQ,EAAE,EAAE;YACZL,IAAI,EAAE;cACJC,IAAI,EAAE;YACR;UACF;QACF,CAAC;QACDK,OAAO,EAAE;UACPzF,eAAe,EAAE,MAAM;UACvB0F,UAAU,EAAE,MAAM;UAClBC,SAAS,EAAE,MAAM;UACjBC,WAAW,EAAE,MAAM;UACnBC,WAAW,EAAE;QACf;MACF;IACF,CAAE;IAAAtE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACF,EACA,CAAC/B,YAAY,iBACZlE,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,qCAAwC,CAE5C,CAAC,EAGL,CAACrE,OAAO,IAAIR,QAAQ,CAACmC,MAAM,GAAG,CAAC,iBAC9BvD,KAAA,CAAA0F,aAAA,CAAC3E,cAAc;IACbK,QAAQ,EAAEA,QAAS;IACnBE,aAAa,EAAEA,aAAc;IAAAsE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACF,eAGDjG,KAAA,CAAA0F,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjC3E,aAAa,iBACZtB,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oBAAsB,CAAC,eAC3BjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI3E,aAAa,CAAC6I,gBAAoB,CAAC,eAEvCnK,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gBAAkB,CAAC,eACvBjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG3E,aAAa,CAAC8I,aAAa,CAAClE,GAAG,CAAC,CAAClE,QAAQ,EAAEkF,KAAK,kBAC/ClH,KAAA,CAAA0F,aAAA;IAAIS,GAAG,EAAEe,KAAM;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACZjE,QAAQ,CAAC+C,IAAI,EAAC,IAAE,EAACnC,WAAW,CAACZ,QAAQ,CAACqI,KAAK,CAAC,EAAC,GAC7C,EAACrI,QAAQ,CAACsI,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,IAC/B,CACL,CACC,CAAC,eAELvK,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iBAAmB,CAAC,eACxBjG,KAAA,CAAA0F,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG3E,aAAa,CAACkJ,eAAe,CAACtE,GAAG,CAAC,CAACuE,GAAG,EAAEvD,KAAK,kBAC5ClH,KAAA,CAAA0F,aAAA;IAAIS,GAAG,EAAEe,KAAM;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEwE,GAAQ,CAC1B,CACC,CACD,CAEJ,CAAC,EAGL1D,uBAAuB,CAAC,CACtB,CACF,CAAC;AAEV,CAAC;AAED,eAAe9F,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}
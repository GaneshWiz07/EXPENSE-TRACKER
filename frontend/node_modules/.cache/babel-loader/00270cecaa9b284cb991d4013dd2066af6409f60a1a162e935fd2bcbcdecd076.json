{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from'react';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import{Pie}from'react-chartjs-2';import{useNavigate}from'react-router-dom';import{formatCurrency}from'../utils/formatCurrency';import{useAuth}from'../contexts/AuthContext';import{expenseApi}from'../utils/api';import FinancialGuide from'./FinancialGuide';import'./ExpenseList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const ExpenseList=()=>{const navigate=useNavigate();const{currentUser}=useAuth();const[expenses,setExpenses]=useState([]);const[monthlyReport,setMonthlyReport]=useState(null);const[errorMessage,setErrorMessage]=useState('');const[successMessage,setSuccessMessage]=useState('');const[loading,setLoading]=useState(true);const[filters,setFilters]=useState({category:'',subcategory:'',paymentMethod:'',minAmount:'',maxAmount:''});const[appliedFilters,setAppliedFilters]=useState({});// Redirect to login if not authenticated\nuseEffect(()=>{if(!currentUser){navigate('/login',{state:{from:'/expenses'}});return;}},[currentUser,navigate]);const categories=['Food','Transportation','Entertainment','Utilities','Housing','Healthcare','Education','Personal','Shopping','Miscellaneous'];const paymentMethods=['Cash','Credit Card','Debit Card','Bank Transfer','Other'];const subcategories={'Food':['Groceries','Restaurants','Cafes','Takeout'],'Transportation':['Public Transit','Fuel','Taxi/Ride-share','Maintenance'],'Housing':['Rent','Mortgage','Repairs','Maintenance'],'Utilities':['Electricity','Water','Internet','Phone'],'Healthcare':['Medicines','Doctor Visits','Insurance','Wellness'],'Entertainment':['Movies','Concerts','Streaming','Hobbies'],'Shopping':['Clothing','Electronics','Gifts','Personal Care'],'Miscellaneous':['Unexpected','Donations','Education','Other']};const formatRupee=amount=>{return formatCurrency(amount,'INR');};const fetchExpenses=useCallback(async()=>{if(!currentUser){return;}try{setLoading(true);setErrorMessage('');const response=await expenseApi.getExpenses({...appliedFilters,page:1,limit:100});console.log('Expenses response:',response.data);let expensesData=response.data.data||response.data;// Apply client-side filtering for more precise control\nif(expensesData&&expensesData.length>0){expensesData=expensesData.filter(expense=>{let matchesFilter=true;// Category filter\nif(appliedFilters.category&&expense.category!==appliedFilters.category){matchesFilter=false;}// Subcategory filter\nif(appliedFilters.subcategory&&expense.subcategory!==appliedFilters.subcategory){matchesFilter=false;}// Payment method filter\nif(appliedFilters.paymentMethod&&expense.paymentMethod!==appliedFilters.paymentMethod){matchesFilter=false;}// Amount range filter\nconst amount=parseFloat(expense.amount);if(appliedFilters.minAmount&&amount<appliedFilters.minAmount){matchesFilter=false;}if(appliedFilters.maxAmount&&amount>appliedFilters.maxAmount){matchesFilter=false;}return matchesFilter;});}setExpenses(expensesData);}catch(err){var _err$response;console.error('Fetch expenses error:',err);if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401){navigate('/login',{state:{from:'/expenses'}});}else{setErrorMessage('Failed to fetch expenses. Please try again later.');}}finally{setLoading(false);}},[currentUser,appliedFilters,navigate]);const fetchMonthlyReport=useCallback(async()=>{if(!currentUser)return;try{const response=await expenseApi.getMonthlyReport(appliedFilters);setMonthlyReport(response.data);}catch(error){console.error('Error fetching monthly report:',error);}},[currentUser,appliedFilters]);useEffect(()=>{if(currentUser){fetchExpenses();fetchMonthlyReport();}},[currentUser,fetchExpenses,fetchMonthlyReport]);useEffect(()=>{if(currentUser){fetchExpenses();}},[currentUser,appliedFilters,fetchExpenses]);const pieChartData=useMemo(()=>{if(!expenses||expenses.length===0){return{labels:[],datasets:[{data:[],backgroundColor:[],hoverBackgroundColor:[]}]};}// Calculate category totals\nconst categoryTotals=expenses.reduce((acc,expense)=>{acc[expense.category]=(acc[expense.category]||0)+expense.amount;return acc;},{});// Prepare data for pie chart\nreturn{labels:Object.keys(categoryTotals),datasets:[{data:Object.values(categoryTotals),backgroundColor:['#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF','#FF9F40','#FF6384','#C9CBCF'],hoverBackgroundColor:['#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF','#FF9F40','#FF6384','#C9CBCF']}]};},[expenses]);const handleFilterChange=e=>{const{name,value}=e.target;setFilters(prev=>{const newFilters={...prev,[name]:value};// Reset subcategory when category changes\nif(name==='category'&&value!==prev.category){newFilters.subcategory='';}return newFilters;});};const applyFilters=()=>{const validFilters={};// Validate and format amount filters\nif(filters.minAmount){const minAmount=parseFloat(filters.minAmount);if(!isNaN(minAmount)&&minAmount>=0){validFilters.minAmount=minAmount;}}if(filters.maxAmount){const maxAmount=parseFloat(filters.maxAmount);if(!isNaN(maxAmount)&&maxAmount>=0){validFilters.maxAmount=maxAmount;}}// Validate amount range\nif(validFilters.minAmount&&validFilters.maxAmount){if(validFilters.minAmount>validFilters.maxAmount){setErrorMessage('Minimum amount cannot be greater than maximum amount');return;}}// Add other filters if they have values\nif(filters.category&&filters.category.trim()){validFilters.category=filters.category.trim();}if(filters.subcategory&&filters.subcategory.trim()){validFilters.subcategory=filters.subcategory.trim();}if(filters.paymentMethod&&filters.paymentMethod.trim()){validFilters.paymentMethod=filters.paymentMethod.trim();}console.log('Applying filters:',validFilters);setErrorMessage('');setAppliedFilters(validFilters);};const resetFilters=()=>{setFilters({category:'',subcategory:'',paymentMethod:'',minAmount:'',maxAmount:''});setAppliedFilters({});setErrorMessage('');};const renderExpenseList=()=>{if(loading&&!expenses.length){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading expenses...\"});}if(errorMessage){return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:errorMessage});}if(!expenses.length){return/*#__PURE__*/_jsx(\"div\",{className:\"no-expenses\",children:Object.keys(appliedFilters).length>0?\"No expenses match the selected filters.\":\"No expenses found.\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"expense-list\",children:[successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:successMessage}),/*#__PURE__*/_jsxs(\"table\",{className:\"expense-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Category\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Subcategory\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tags\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:expenses.map(expense=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:expense.description}),/*#__PURE__*/_jsx(\"td\",{children:formatRupee(expense.amount)}),/*#__PURE__*/_jsx(\"td\",{children:expense.category}),/*#__PURE__*/_jsx(\"td\",{children:expense.subcategory||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:expense.paymentMethod}),/*#__PURE__*/_jsx(\"td\",{children:new Date(expense.date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:expense.tags?expense.tags.join(', '):'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(expense._id||expense.id),className:\"delete-btn\",disabled:loading,children:\"\\uD83D\\uDDD1\\uFE0F Delete\"})})]},expense._id||expense.id))})]})]});};const renderAIFinancialReport=()=>{if(!monthlyReport)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"ai-insights-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ai-insights-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"AI Financial Insights\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-insights-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ai-insights-content\",children:monthlyReport.insights.map((insight,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"ai-tip\",\"data-type\":insight.type,style:{animationDelay:`${index*0.1}s`},children:[/*#__PURE__*/_jsx(\"div\",{className:\"ai-tip-icon\",children:getInsightIcon(insight.type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-tip-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ai-tip-title\",children:[insight.title,insight.type==='achievement'&&'🎉',insight.type==='warning'&&'⚠️']}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-tip-description\",children:insight.description})]})]},index))})}),monthlyReport.summary&&/*#__PURE__*/_jsx(\"div\",{className:\"ai-insights-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ai-tip\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ai-tip-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-tip-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ai-tip-title\",children:\"Monthly Summary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-tip-description\",children:monthlyReport.summary})]})]})})]});};const getInsightIcon=type=>{const icons={saving:'💰',warning:'⚠️',trend:'📈',suggestion:'💡',achievement:'🎯',budget:'📊',spending:'💳',income:'💵',default:'📋'};return icons[type]||icons.default;};const renderFilters=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"expense-filters-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-inputs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"category\",value:filters.category,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]}),filters.category&&subcategories[filters.category]&&/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Subcategory\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"subcategory\",value:filters.subcategory,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Subcategories\"}),subcategories[filters.category].map(sub=>/*#__PURE__*/_jsx(\"option\",{value:sub,children:sub},sub))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"paymentMethod\",value:filters.paymentMethod,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Methods\"}),paymentMethods.map(method=>/*#__PURE__*/_jsx(\"option\",{value:method,children:method},method))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Min Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"minAmount\",value:filters.minAmount,onChange:handleFilterChange,placeholder:\"Min Amount\",min:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Max Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"maxAmount\",value:filters.maxAmount,onChange:handleFilterChange,placeholder:\"Max Amount\",min:\"0\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"apply-filters-btn\",onClick:applyFilters,disabled:loading,children:\"Apply Filters\"}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-filters-btn\",onClick:resetFilters,disabled:loading,children:\"Reset Filters\"})]})]}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"filter-error\",children:errorMessage})]});if(!currentUser){return null;}if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading your expenses...\"})]});}const handleDelete=async expenseId=>{if(!window.confirm('Are you sure you want to delete this expense?')){return;}try{setLoading(true);setErrorMessage('');// First update the UI optimistically\nsetExpenses(prevExpenses=>prevExpenses.filter(expense=>String(expense._id||expense.id)!==String(expenseId)));// Then make the API call\nawait expenseApi.deleteExpense(expenseId);// Show success message\nsetSuccessMessage('Expense deleted successfully!');// Update monthly report after successful deletion\nawait fetchMonthlyReport();// Clear success message after 3 seconds\nsetTimeout(()=>{setSuccessMessage('');},3000);}catch(err){console.error('Delete expense error:',err);// If deletion fails, revert the optimistic update\nawait fetchExpenses();setErrorMessage('Failed to delete expense. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"expense-list-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expenses-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCB8 Expense List\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-expense-btn\",onClick:()=>navigate('/add-expense'),children:\"\\u2795 Add New Expense\"})]}),renderFilters(),/*#__PURE__*/_jsx(\"div\",{className:\"expense-table-container\",children:expenses.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-expenses\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No expenses found matching the current filters.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-expense-btn\",onClick:()=>navigate('/add-expense'),children:\"\\u2795 Add Expense\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"expense-table-scrollable\",children:renderExpenseList()})}),/*#__PURE__*/_jsxs(\"div\",{className:\"monthly-report\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[pieChartData&&/*#__PURE__*/_jsx(Pie,{data:pieChartData,options:{responsive:true,maintainAspectRatio:false,layout:{padding:10},plugins:{title:{display:true,text:'Expense Distribution',font:{size:18,weight:'bold'}},legend:{position:'bottom',labels:{boxWidth:20,font:{size:12}}},tooltip:{backgroundColor:'#333',titleColor:'#fff',bodyColor:'#fff',borderColor:'#666',borderWidth:1}}}}),!pieChartData&&/*#__PURE__*/_jsx(\"div\",{children:\"No expense data available for chart\"})]}),!loading&&expenses.length>0&&/*#__PURE__*/_jsx(FinancialGuide,{expenses:expenses,monthlyReport:monthlyReport}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-financial-report\",children:monthlyReport&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Financial Insights\"}),/*#__PURE__*/_jsx(\"p\",{children:monthlyReport.healthAssessment}),/*#__PURE__*/_jsx(\"h4\",{children:\"Top Categories\"}),/*#__PURE__*/_jsx(\"ul\",{children:monthlyReport.topCategories.map((category,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[category.name,\": \",formatRupee(category.total),\"(\",category.percentage.toFixed(2),\"%)\"]},index))}),/*#__PURE__*/_jsx(\"h4\",{children:\"Recommendations\"}),/*#__PURE__*/_jsx(\"ul\",{children:monthlyReport.recommendations.map((rec,index)=>/*#__PURE__*/_jsx(\"li\",{children:rec},index))})]})}),renderAIFinancialReport()]})]});};export default ExpenseList;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","useNavigate","formatCurrency","useAuth","expenseApi","FinancialGuide","jsx","_jsx","jsxs","_jsxs","register","ExpenseList","navigate","currentUser","expenses","setExpenses","monthlyReport","setMonthlyReport","errorMessage","setErrorMessage","successMessage","setSuccessMessage","loading","setLoading","filters","setFilters","category","subcategory","paymentMethod","minAmount","maxAmount","appliedFilters","setAppliedFilters","state","from","categories","paymentMethods","subcategories","formatRupee","amount","fetchExpenses","response","getExpenses","page","limit","console","log","data","expensesData","length","filter","expense","matchesFilter","parseFloat","err","_err$response","error","status","fetchMonthlyReport","getMonthlyReport","pieChartData","labels","datasets","backgroundColor","hoverBackgroundColor","categoryTotals","reduce","acc","Object","keys","values","handleFilterChange","e","name","value","target","prev","newFilters","applyFilters","validFilters","isNaN","trim","resetFilters","renderExpenseList","className","children","map","description","Date","date","toLocaleDateString","tags","join","onClick","handleDelete","_id","id","disabled","renderAIFinancialReport","insights","insight","index","type","style","animationDelay","getInsightIcon","title","summary","icons","saving","warning","trend","suggestion","achievement","budget","spending","income","default","renderFilters","onChange","sub","method","placeholder","min","expenseId","window","confirm","prevExpenses","String","deleteExpense","setTimeout","options","responsive","maintainAspectRatio","layout","padding","plugins","display","text","font","size","weight","legend","position","boxWidth","tooltip","titleColor","bodyColor","borderColor","borderWidth","healthAssessment","topCategories","total","percentage","toFixed","recommendations","rec"],"sources":["S:/GITHUB PROJECTS/EXPENSE-TRACKER/frontend/src/components/ExpenseList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport { formatCurrency } from '../utils/formatCurrency';\nimport { useAuth } from '../contexts/AuthContext';\nimport { expenseApi } from '../utils/api';\nimport FinancialGuide from './FinancialGuide';\nimport './ExpenseList.css';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst ExpenseList = () => {\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const [expenses, setExpenses] = useState([]);\n  const [monthlyReport, setMonthlyReport] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    category: '',\n    subcategory: '',\n    paymentMethod: '',\n    minAmount: '',\n    maxAmount: ''\n  });\n  const [appliedFilters, setAppliedFilters] = useState({});\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login', { state: { from: '/expenses' } });\n      return;\n    }\n  }, [currentUser, navigate]);\n\n  const categories = [\n    'Food', 'Transportation', 'Entertainment', \n    'Utilities', 'Housing', 'Healthcare', \n    'Education', 'Personal', 'Shopping', \n    'Miscellaneous'\n  ];\n\n  const paymentMethods = [\n    'Cash', 'Credit Card', 'Debit Card', \n    'Bank Transfer', 'Other'\n  ];\n\n  const subcategories = {\n    'Food': ['Groceries', 'Restaurants', 'Cafes', 'Takeout'],\n    'Transportation': ['Public Transit', 'Fuel', 'Taxi/Ride-share', 'Maintenance'],\n    'Housing': ['Rent', 'Mortgage', 'Repairs', 'Maintenance'],\n    'Utilities': ['Electricity', 'Water', 'Internet', 'Phone'],\n    'Healthcare': ['Medicines', 'Doctor Visits', 'Insurance', 'Wellness'],\n    'Entertainment': ['Movies', 'Concerts', 'Streaming', 'Hobbies'],\n    'Shopping': ['Clothing', 'Electronics', 'Gifts', 'Personal Care'],\n    'Miscellaneous': ['Unexpected', 'Donations', 'Education', 'Other']\n  };\n\n  const formatRupee = (amount) => {\n    return formatCurrency(amount, 'INR');\n  };\n\n  const fetchExpenses = useCallback(async () => {\n    if (!currentUser) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      const response = await expenseApi.getExpenses({\n        ...appliedFilters,\n        page: 1,\n        limit: 100\n      });\n\n      console.log('Expenses response:', response.data);\n      let expensesData = response.data.data || response.data;\n\n      // Apply client-side filtering for more precise control\n      if (expensesData && expensesData.length > 0) {\n        expensesData = expensesData.filter(expense => {\n          let matchesFilter = true;\n\n          // Category filter\n          if (appliedFilters.category && expense.category !== appliedFilters.category) {\n            matchesFilter = false;\n          }\n\n          // Subcategory filter\n          if (appliedFilters.subcategory && expense.subcategory !== appliedFilters.subcategory) {\n            matchesFilter = false;\n          }\n\n          // Payment method filter\n          if (appliedFilters.paymentMethod && expense.paymentMethod !== appliedFilters.paymentMethod) {\n            matchesFilter = false;\n          }\n\n          // Amount range filter\n          const amount = parseFloat(expense.amount);\n          if (appliedFilters.minAmount && amount < appliedFilters.minAmount) {\n            matchesFilter = false;\n          }\n          if (appliedFilters.maxAmount && amount > appliedFilters.maxAmount) {\n            matchesFilter = false;\n          }\n\n          return matchesFilter;\n        });\n      }\n\n      setExpenses(expensesData);\n    } catch (err) {\n      console.error('Fetch expenses error:', err);\n      if (err.response?.status === 401) {\n        navigate('/login', { state: { from: '/expenses' } });\n      } else {\n        setErrorMessage('Failed to fetch expenses. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser, appliedFilters, navigate]);\n\n  const fetchMonthlyReport = useCallback(async () => {\n    if (!currentUser) return;\n\n    try {\n      const response = await expenseApi.getMonthlyReport(appliedFilters);\n      setMonthlyReport(response.data);\n    } catch (error) {\n      console.error('Error fetching monthly report:', error);\n    }\n  }, [currentUser, appliedFilters]);\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchExpenses();\n      fetchMonthlyReport();\n    }\n  }, [currentUser, fetchExpenses, fetchMonthlyReport]);\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchExpenses();\n    }\n  }, [currentUser, appliedFilters, fetchExpenses]);\n\n  const pieChartData = useMemo(() => {\n    if (!expenses || expenses.length === 0) {\n      return {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: [],\n          hoverBackgroundColor: []\n        }]\n      };\n    }\n\n    // Calculate category totals\n    const categoryTotals = expenses.reduce((acc, expense) => {\n      acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n      return acc;\n    }, {});\n\n    // Prepare data for pie chart\n    return {\n      labels: Object.keys(categoryTotals),\n      datasets: [{\n        data: Object.values(categoryTotals),\n        backgroundColor: [\n          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', \n          '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\n        ],\n        hoverBackgroundColor: [\n          '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', \n          '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\n        ]\n      }]\n    };\n  }, [expenses]);\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => {\n      const newFilters = {\n        ...prev,\n        [name]: value\n      };\n      \n      // Reset subcategory when category changes\n      if (name === 'category' && value !== prev.category) {\n        newFilters.subcategory = '';\n      }\n      \n      return newFilters;\n    });\n  };\n\n  const applyFilters = () => {\n    const validFilters = {};\n    \n    // Validate and format amount filters\n    if (filters.minAmount) {\n      const minAmount = parseFloat(filters.minAmount);\n      if (!isNaN(minAmount) && minAmount >= 0) {\n        validFilters.minAmount = minAmount;\n      }\n    }\n    \n    if (filters.maxAmount) {\n      const maxAmount = parseFloat(filters.maxAmount);\n      if (!isNaN(maxAmount) && maxAmount >= 0) {\n        validFilters.maxAmount = maxAmount;\n      }\n    }\n    \n    // Validate amount range\n    if (validFilters.minAmount && validFilters.maxAmount) {\n      if (validFilters.minAmount > validFilters.maxAmount) {\n        setErrorMessage('Minimum amount cannot be greater than maximum amount');\n        return;\n      }\n    }\n    \n    // Add other filters if they have values\n    if (filters.category && filters.category.trim()) {\n      validFilters.category = filters.category.trim();\n    }\n    if (filters.subcategory && filters.subcategory.trim()) {\n      validFilters.subcategory = filters.subcategory.trim();\n    }\n    if (filters.paymentMethod && filters.paymentMethod.trim()) {\n      validFilters.paymentMethod = filters.paymentMethod.trim();\n    }\n    \n    console.log('Applying filters:', validFilters);\n    setErrorMessage('');\n    setAppliedFilters(validFilters);\n  };\n\n  const resetFilters = () => {\n    setFilters({\n      category: '',\n      subcategory: '',\n      paymentMethod: '',\n      minAmount: '',\n      maxAmount: ''\n    });\n    setAppliedFilters({});\n    setErrorMessage('');\n  };\n\n  const renderExpenseList = () => {\n    if (loading && !expenses.length) {\n      return <div className=\"loading\">Loading expenses...</div>;\n    }\n\n    if (errorMessage) {\n      return <div className=\"error\">{errorMessage}</div>;\n    }\n\n    if (!expenses.length) {\n      return (\n        <div className=\"no-expenses\">\n          {Object.keys(appliedFilters).length > 0 \n            ? \"No expenses match the selected filters.\"\n            : \"No expenses found.\"}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"expense-list\">\n        {successMessage && (\n          <div className=\"success-message\">{successMessage}</div>\n        )}\n        <table className=\"expense-table\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Category</th>\n              <th>Subcategory</th>\n              <th>Payment Method</th>\n              <th>Date</th>\n              <th>Tags</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.map((expense) => (\n              <tr key={expense._id || expense.id}>\n                <td>{expense.description}</td>\n                <td>{formatRupee(expense.amount)}</td>\n                <td>{expense.category}</td>\n                <td>{expense.subcategory || 'N/A'}</td>\n                <td>{expense.paymentMethod}</td>\n                <td>{new Date(expense.date).toLocaleDateString()}</td>\n                <td>{expense.tags ? expense.tags.join(', ') : 'N/A'}</td>\n                <td>\n                  <button \n                    onClick={() => handleDelete(expense._id || expense.id)}\n                    className=\"delete-btn\"\n                    disabled={loading}\n                  >\n                    🗑️ Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const renderAIFinancialReport = () => {\n    if (!monthlyReport) return null;\n\n    return (\n      <div className=\"ai-insights-section\">\n        <div className=\"ai-insights-header\">\n          <h3>AI Financial Insights</h3>\n        </div>\n        \n        <div className=\"ai-insights-card\">\n          <div className=\"ai-insights-content\">\n            {monthlyReport.insights.map((insight, index) => (\n              <div \n                key={index} \n                className=\"ai-tip\"\n                data-type={insight.type}\n                style={{animationDelay: `${index * 0.1}s`}}\n              >\n                <div className=\"ai-tip-icon\">\n                  {getInsightIcon(insight.type)}\n                </div>\n                <div className=\"ai-tip-content\">\n                  <div className=\"ai-tip-title\">\n                    {insight.title}\n                    {insight.type === 'achievement' && '🎉'}\n                    {insight.type === 'warning' && '⚠️'}\n                  </div>\n                  <div className=\"ai-tip-description\">\n                    {insight.description}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {monthlyReport.summary && (\n          <div className=\"ai-insights-card\">\n            <div className=\"ai-tip\">\n              <div className=\"ai-tip-icon\">📊</div>\n              <div className=\"ai-tip-content\">\n                <div className=\"ai-tip-title\">Monthly Summary</div>\n                <div className=\"ai-tip-description\">\n                  {monthlyReport.summary}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getInsightIcon = (type) => {\n    const icons = {\n      saving: '💰',\n      warning: '⚠️',\n      trend: '📈',\n      suggestion: '💡',\n      achievement: '🎯',\n      budget: '📊',\n      spending: '💳',\n      income: '💵',\n      default: '📋'\n    };\n    return icons[type] || icons.default;\n  };\n\n  const renderFilters = () => (\n    <div className=\"expense-filters-container\">\n      <div className=\"filter-container\">\n        <div className=\"filter-inputs\">\n          <div className=\"filter-group\">\n            <label>Category</label>\n            <select\n              name=\"category\" \n              value={filters.category} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Categories</option>\n              {categories.map(category => (\n                <option key={category} value={category}>{category}</option>\n              ))}\n            </select>\n          </div>\n\n          {filters.category && subcategories[filters.category] && (\n            <div className=\"filter-group\">\n              <label>Subcategory</label>\n              <select \n                name=\"subcategory\" \n                value={filters.subcategory} \n                onChange={handleFilterChange}\n              >\n                <option value=\"\">All Subcategories</option>\n                {subcategories[filters.category].map(sub => (\n                  <option key={sub} value={sub}>{sub}</option>\n                ))}\n              </select>\n            </div>\n          )}\n\n          <div className=\"filter-group\">\n            <label>Payment Method</label>\n            <select \n              name=\"paymentMethod\" \n              value={filters.paymentMethod} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Methods</option>\n              {paymentMethods.map(method => (\n                <option key={method} value={method}>{method}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"filter-group\">\n            <label>Min Amount</label>\n            <input\n              type=\"number\"\n              name=\"minAmount\"\n              value={filters.minAmount}\n              onChange={handleFilterChange}\n              placeholder=\"Min Amount\"\n              min=\"0\"\n            />\n          </div>\n\n          <div className=\"filter-group\">\n            <label>Max Amount</label>\n            <input\n              type=\"number\"\n              name=\"maxAmount\"\n              value={filters.maxAmount}\n              onChange={handleFilterChange}\n              placeholder=\"Max Amount\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n\n        <div className=\"filter-actions\">\n          <button \n            className=\"apply-filters-btn\" \n            onClick={applyFilters}\n            disabled={loading}\n          >\n            Apply Filters\n          </button>\n          <button \n            className=\"reset-filters-btn\" \n            onClick={resetFilters}\n            disabled={loading}\n          >\n            Reset Filters\n          </button>\n        </div>\n      </div>\n      {errorMessage && <div className=\"filter-error\">{errorMessage}</div>}\n    </div>\n  );\n\n  if (!currentUser) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading your expenses...</p>\n      </div>\n    );\n  }\n\n  const handleDelete = async (expenseId) => {\n    if (!window.confirm('Are you sure you want to delete this expense?')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      \n      // First update the UI optimistically\n      setExpenses(prevExpenses => \n        prevExpenses.filter(expense => \n          String(expense._id || expense.id) !== String(expenseId)\n        )\n      );\n\n      // Then make the API call\n      await expenseApi.deleteExpense(expenseId);\n      \n      // Show success message\n      setSuccessMessage('Expense deleted successfully!');\n      \n      // Update monthly report after successful deletion\n      await fetchMonthlyReport();\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Delete expense error:', err);\n      // If deletion fails, revert the optimistic update\n      await fetchExpenses();\n      setErrorMessage('Failed to delete expense. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"expense-list-container\">\n      <div className=\"expenses-header\">\n        <h2>💸 Expense List</h2>\n        <button \n          className=\"add-expense-btn\" \n          onClick={() => navigate('/add-expense')}\n        >\n          ➕ Add New Expense\n        </button>\n      </div>\n\n      {renderFilters()}\n\n      <div className=\"expense-table-container\">\n        {expenses.length === 0 ? (\n          <div className=\"no-expenses\">\n            <p>No expenses found matching the current filters.</p>\n            <button \n              className=\"add-expense-btn\"\n              onClick={() => navigate('/add-expense')}\n            >\n              ➕ Add Expense\n            </button>\n          </div>\n        ) : (\n          <div className=\"expense-table-scrollable\">\n            {renderExpenseList()}\n          </div>\n        )}\n      </div>\n\n      <div className=\"monthly-report\">\n        {/* Pie Chart */}\n        <div className=\"chart-container\">\n          {pieChartData && (\n            <Pie \n              data={pieChartData} \n              options={{ \n                responsive: true, \n                maintainAspectRatio: false,\n                layout: {\n                  padding: 10\n                },\n                plugins: {\n                  title: {\n                    display: true,\n                    text: 'Expense Distribution',\n                    font: {\n                      size: 18,\n                      weight: 'bold'\n                    }\n                  },\n                  legend: {\n                    position: 'bottom',\n                    labels: {\n                      boxWidth: 20,\n                      font: {\n                        size: 12\n                      }\n                    }\n                  },\n                  tooltip: {\n                    backgroundColor: '#333',\n                    titleColor: '#fff',\n                    bodyColor: '#fff',\n                    borderColor: '#666',\n                    borderWidth: 1\n                  }\n                }\n              }} \n            />\n          )}\n          {!pieChartData && (\n            <div>No expense data available for chart</div>\n          )}\n        </div>\n\n        {/* Financial Guide */}\n        {!loading && expenses.length > 0 && (\n          <FinancialGuide \n            expenses={expenses} \n            monthlyReport={monthlyReport}\n          />\n        )}\n\n        {/* AI Financial Report */}\n        <div className=\"ai-financial-report\">\n          {monthlyReport && (\n            <div>\n              <h3>Financial Insights</h3>\n              <p>{monthlyReport.healthAssessment}</p>\n              \n              <h4>Top Categories</h4>\n              <ul>\n                {monthlyReport.topCategories.map((category, index) => (\n                  <li key={index}>\n                    {category.name}: {formatRupee(category.total)} \n                    ({category.percentage.toFixed(2)}%)\n                  </li>\n                ))}\n              </ul>\n\n              <h4>Recommendations</h4>\n              <ul>\n                {monthlyReport.recommendations.map((rec, index) => (\n                  <li key={index}>{rec}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n\n        {/* AI Financial Tips */}\n        {renderAIFinancialReport()}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
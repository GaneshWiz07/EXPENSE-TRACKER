{"ast":null,"code":"var _jsxFileName = \"S:\\\\GITHUB PROJECTS\\\\EXPENSE-TRACKER\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { auth } from '../config/firebaseConfig';\nconst AuthContext = createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  function signup(email, password, displayName) {\n    return createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Update user profile with display name\n      return updateProfile(userCredential.user, {\n        displayName: displayName\n      }).then(() => userCredential.user);\n    });\n  }\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      setCurrentUser(userCredential.user); // Set currentUser state\n      return userCredential.user;\n    });\n  }\n  function logout() {\n    return signOut(auth);\n  }\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    signInWithGoogle\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","GoogleAuthProvider","signInWithPopup","auth","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","displayName","then","userCredential","user","login","logout","signInWithGoogle","provider","unsubscribe","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["S:/GITHUB PROJECTS/EXPENSE-TRACKER/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile,\n  GoogleAuthProvider,\n  signInWithPopup\n} from 'firebase/auth';\nimport { auth } from '../config/firebaseConfig';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password, displayName) {\n    return createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Update user profile with display name\n        return updateProfile(userCredential.user, {\n          displayName: displayName\n        }).then(() => userCredential.user);\n      });\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        setCurrentUser(userCredential.user); // Set currentUser state\n        return userCredential.user;\n      });\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    signInWithGoogle\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,EAClBC,aAAa,EACbC,kBAAkB,EAClBC,eAAe,QACV,eAAe;AACtB,SAASC,IAAI,QAAQ,0BAA0B;AAE/C,MAAMC,WAAW,GAAGZ,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASa,OAAOA,CAAA,EAAG;EACxB,OAAOX,UAAU,CAACU,WAAW,CAAC;AAChC;AAEA,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5C,SAASmB,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IAC5C,OAAOnB,8BAA8B,CAACO,IAAI,EAAEU,KAAK,EAAEC,QAAQ,CAAC,CACzDE,IAAI,CAAEC,cAAc,IAAK;MACxB;MACA,OAAOjB,aAAa,CAACiB,cAAc,CAACC,IAAI,EAAE;QACxCH,WAAW,EAAEA;MACf,CAAC,CAAC,CAACC,IAAI,CAAC,MAAMC,cAAc,CAACC,IAAI,CAAC;IACpC,CAAC,CAAC;EACN;EAEA,SAASC,KAAKA,CAACN,KAAK,EAAEC,QAAQ,EAAE;IAC9B,OAAOjB,0BAA0B,CAACM,IAAI,EAAEU,KAAK,EAAEC,QAAQ,CAAC,CACrDE,IAAI,CAAEC,cAAc,IAAK;MACxBR,cAAc,CAACQ,cAAc,CAACC,IAAI,CAAC,CAAC,CAAC;MACrC,OAAOD,cAAc,CAACC,IAAI;IAC5B,CAAC,CAAC;EACN;EAEA,SAASE,MAAMA,CAAA,EAAG;IAChB,OAAOtB,OAAO,CAACK,IAAI,CAAC;EACtB;EAEA,SAASkB,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,QAAQ,GAAG,IAAIrB,kBAAkB,CAAC,CAAC;IACzC,OAAOC,eAAe,CAACC,IAAI,EAAEmB,QAAQ,CAAC;EACxC;EAEA3B,SAAS,CAAC,MAAM;IACd,MAAM4B,WAAW,GAAGxB,kBAAkB,CAACI,IAAI,EAAGe,IAAI,IAAK;MACrDT,cAAc,CAACS,IAAI,CAAC;MACpBP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,OAAOY,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG;IACZhB,WAAW;IACXI,MAAM;IACNO,KAAK;IACLC,MAAM;IACNC;EACF,CAAC;EAED,oBACE9B,KAAA,CAAAkC,aAAA,CAACrB,WAAW,CAACsB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChC,CAACtB,OAAO,IAAIH,QACO,CAAC;AAE3B","ignoreList":[]},"metadata":{},"sourceType":"module"}
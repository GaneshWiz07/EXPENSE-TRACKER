{"ast":null,"code":"var _jsxFileName = \"S:\\\\New folder\\\\expense-tracker\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth, googleProvider } from '../config/firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sign up with email and password\n  const signup = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  // Login with email and password\n  const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // Google Sign In\n  const signInWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n\n  // Logout\n  const logout = () => {\n    return signOut(auth);\n  };\n\n  // Listen for authentication state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    signInWithGoogle,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","auth","googleProvider","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","signup","email","password","login","signInWithGoogle","logout","unsubscribe","user","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["S:/New folder/expense-tracker/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { \n  signInWithPopup, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { auth, googleProvider } from '../config/firebaseConfig';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sign up with email and password\n  const signup = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  // Login with email and password\n  const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // Google Sign In\n  const signInWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n\n  // Logout\n  const logout = () => {\n    return signOut(auth);\n  };\n\n  // Listen for authentication state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    signInWithGoogle,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SACEC,eAAe,EACfC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,OAAO,EACPC,kBAAkB,QACb,eAAe;AACtB,SAASC,IAAI,EAAEC,cAAc,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMc,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMoB,MAAM,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAClC,OAAOjB,8BAA8B,CAACG,IAAI,EAAEa,KAAK,EAAEC,QAAQ,CAAC;EAC9D,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAK;IACjC,OAAOlB,0BAA0B,CAACI,IAAI,EAAEa,KAAK,EAAEC,QAAQ,CAAC;EAC1D,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOrB,eAAe,CAACK,IAAI,EAAEC,cAAc,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMgB,MAAM,GAAGA,CAAA,KAAM;IACnB,OAAOnB,OAAO,CAACE,IAAI,CAAC;EACtB,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACd,MAAMwB,WAAW,GAAGnB,kBAAkB,CAACC,IAAI,EAAGmB,IAAI,IAAK;MACrDV,cAAc,CAACU,IAAI,CAAC;MACpBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,OAAOO,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAG;IACZZ,WAAW;IACXI,MAAM;IACNG,KAAK;IACLC,gBAAgB;IAChBC;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;;AAED;AAAAlB,EAAA,CAlDaF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAmDzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOnC,UAAU,CAACW,WAAW,CAAC;AAChC,CAAC;AAACwB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"S:\\\\GITHUB PROJECTS\\\\EXPENSE-TRACKER\\\\frontend\\\\src\\\\components\\\\FinancialGuide.js\";\nimport React from 'react';\nconst FinancialGuide = ({\n  expenses,\n  monthlyReport\n}) => {\n  // Helper function to calculate total expenses\n  const calculateTotal = () => {\n    return expenses.reduce((sum, expense) => sum + expense.amount, 0);\n  };\n\n  // Helper function to get category-wise spending\n  const getCategorySpending = () => {\n    const categorySpending = {};\n    expenses.forEach(expense => {\n      categorySpending[expense.category] = (categorySpending[expense.category] || 0) + expense.amount;\n    });\n    return categorySpending;\n  };\n\n  // Generate personalized tips based on spending patterns\n  const generateTips = () => {\n    const total = calculateTotal();\n    const categorySpending = getCategorySpending();\n    const tips = [];\n\n    // Add category-specific tips\n    Object.entries(categorySpending).forEach(([category, amount]) => {\n      const percentage = amount / total * 100;\n      if (percentage > 30) {\n        tips.push({\n          type: 'warning',\n          title: `High ${category} Spending`,\n          description: `Your ${category} expenses account for ${percentage.toFixed(1)}% of total spending. Consider setting a budget for this category.`\n        });\n      }\n    });\n\n    // Add general financial tips\n    if (total > 50000) {\n      tips.push({\n        type: 'saving',\n        title: 'High Monthly Spending',\n        description: 'Your monthly expenses are relatively high. Consider reviewing non-essential expenses.'\n      });\n    }\n\n    // Add savings recommendation\n    const savingsTip = {\n      type: 'suggestion',\n      title: 'Savings Opportunity',\n      description: 'Try the 50/30/20 rule: 50% for needs, 30% for wants, and 20% for savings.'\n    };\n    tips.push(savingsTip);\n\n    // Add budget planning tip\n    const budgetTip = {\n      type: 'budget',\n      title: 'Budget Planning',\n      description: 'Set category-wise budgets to better manage your expenses. Review them weekly.'\n    };\n    tips.push(budgetTip);\n    return tips;\n  };\n  const tips = generateTips();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"financial-guide-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guide-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"AI Financial Guide\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"guide-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Personalized recommendations based on your spending patterns\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guide-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, tips.map((tip, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"guide-card\",\n    \"data-type\": tip.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guide-card-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, tip.type === 'warning' && '‚ö†Ô∏è', tip.type === 'saving' && 'üí∞', tip.type === 'suggestion' && 'üí°', tip.type === 'budget' && 'üìä'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"guide-card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, tip.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, tip.description))))));\n};\nexport default FinancialGuide;","map":{"version":3,"names":["React","FinancialGuide","expenses","monthlyReport","calculateTotal","reduce","sum","expense","amount","getCategorySpending","categorySpending","forEach","category","generateTips","total","tips","Object","entries","percentage","push","type","title","description","toFixed","savingsTip","budgetTip","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","tip","index","key"],"sources":["S:/GITHUB PROJECTS/EXPENSE-TRACKER/frontend/src/components/FinancialGuide.js"],"sourcesContent":["import React from 'react';\n\nconst FinancialGuide = ({ expenses, monthlyReport }) => {\n  // Helper function to calculate total expenses\n  const calculateTotal = () => {\n    return expenses.reduce((sum, expense) => sum + expense.amount, 0);\n  };\n\n  // Helper function to get category-wise spending\n  const getCategorySpending = () => {\n    const categorySpending = {};\n    expenses.forEach(expense => {\n      categorySpending[expense.category] = (categorySpending[expense.category] || 0) + expense.amount;\n    });\n    return categorySpending;\n  };\n\n  // Generate personalized tips based on spending patterns\n  const generateTips = () => {\n    const total = calculateTotal();\n    const categorySpending = getCategorySpending();\n    const tips = [];\n\n    // Add category-specific tips\n    Object.entries(categorySpending).forEach(([category, amount]) => {\n      const percentage = (amount / total) * 100;\n      \n      if (percentage > 30) {\n        tips.push({\n          type: 'warning',\n          title: `High ${category} Spending`,\n          description: `Your ${category} expenses account for ${percentage.toFixed(1)}% of total spending. Consider setting a budget for this category.`\n        });\n      }\n    });\n\n    // Add general financial tips\n    if (total > 50000) {\n      tips.push({\n        type: 'saving',\n        title: 'High Monthly Spending',\n        description: 'Your monthly expenses are relatively high. Consider reviewing non-essential expenses.'\n      });\n    }\n\n    // Add savings recommendation\n    const savingsTip = {\n      type: 'suggestion',\n      title: 'Savings Opportunity',\n      description: 'Try the 50/30/20 rule: 50% for needs, 30% for wants, and 20% for savings.'\n    };\n    tips.push(savingsTip);\n\n    // Add budget planning tip\n    const budgetTip = {\n      type: 'budget',\n      title: 'Budget Planning',\n      description: 'Set category-wise budgets to better manage your expenses. Review them weekly.'\n    };\n    tips.push(budgetTip);\n\n    return tips;\n  };\n\n  const tips = generateTips();\n\n  return (\n    <div className=\"financial-guide-section\">\n      <div className=\"guide-header\">\n        <h3>AI Financial Guide</h3>\n        <p className=\"guide-subtitle\">Personalized recommendations based on your spending patterns</p>\n      </div>\n\n      <div className=\"guide-cards\">\n        {tips.map((tip, index) => (\n          <div \n            key={index} \n            className=\"guide-card\"\n            data-type={tip.type}\n          >\n            <div className=\"guide-card-icon\">\n              {tip.type === 'warning' && '‚ö†Ô∏è'}\n              {tip.type === 'saving' && 'üí∞'}\n              {tip.type === 'suggestion' && 'üí°'}\n              {tip.type === 'budget' && 'üìä'}\n            </div>\n            <div className=\"guide-card-content\">\n              <h4>{tip.title}</h4>\n              <p>{tip.description}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialGuide;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}